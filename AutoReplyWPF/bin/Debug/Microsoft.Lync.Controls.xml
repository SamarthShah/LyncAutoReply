<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Lync.Controls</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ClockAutomationPeer">
            <summary>
            RadioMenuItemAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ClockAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.Clock)">
            <summary>
            ClockAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ClockAutomationPeer.GetAutomationIdCore">
            <summary>
            GetAutomationIdCore override.  Return a control-specific string to identify the type of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ClockAutomationPeer.GetClassNameCore">
            <summary>
            GetClassNameCore override.  Return a control-specific string to identify the type of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.ContactItemAutomationPeer">
            <summary>
            ContactItemAutomationPeer class
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer`1">
            <summary>
            ContactBaseAutomationPeer class
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1">
            <summary>
            UCBaseAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>control</c> parameter is null</exception>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1.GetNameCore">
            <summary>
            GetNameCore override.  Return an instance-specific string to identify the control.
            Each control will override this to provide an implementation relevant to that control's
            available information, and by default it will not be instance-specific.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1.GetAutomationIdCore">
            <summary>
            GetAutomationIdCore override.  Return a control-specific string to identify the type of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1.GetClassNameCore">
            <summary>
            GetClassNameCore override.  Return a control-specific string to identify the type of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.AutomationPeers.UCBaseAutomationPeer`1.TypeSafeOwner">
            <summary>
            Get the owner of this AutomationPeer as T
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer`1._defaultName">
            <summary>
            The default value to be returned as the control instance's name
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer`1.GetNameCore">
            <summary>
            GetNameCore override.  Return an instance-specific identifier for this 
            control, which in the case of a ContactBase-derived control is the contact's URI
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactItemAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactItem)">
            <summary>
            ContactItemAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactSearchAutomationPeer">
            <summary>
            ContactSearchAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ContactSearchAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactSearch)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.ContactSearchInputBoxAutomationPeer">
            <summary>
            ContactSearchInputBoxAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchInputBoxAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactSearchInputBox)">
            <summary>
            ContactSearchInputBoxAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchInputBoxAutomationPeer.GetHelpTextCore">
            <summary>
            Override GetHelpTextCore.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer">
            <summary>
            ContactSearchResultListAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactSearchResultList)">
            <summary>
            ContactSearchResultListAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer.GetChildrenCore">
            <summary>
            Override <c>GetChildrenCore</c>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer.GetNameCore">
            <summary>
            GetNameCore override.  Return an instance-specific string to identify the control.
            Each control will override this to provide an implementation relevant to that control's
            available information, and by default it will not be instance-specific.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer.GetAutomationIdCore">
            <summary>
            GetAutomationIdCore override.  Return a control-specific string to identify the type of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactSearchResultListAutomationPeer.GetClassNameCore">
            <summary>
            GetClassNameCore override.  Return a control-specific string to identify the type of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.FocuslessButtonAutomationPeer">
            <summary>
            FocuslessButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.FocuslessButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.FocuslessButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.HyperlinkButtonAutomationPeer">
            <summary>
            HyperlinkButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.HyperlinkButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.HyperlinkButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer">
            <summary>
            MyNoteBoxAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.#ctor(Microsoft.Lync.Controls.MyNoteBox)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Return an implementation of the control pattern corresponding to <paramref name="patternInterface"/>
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.SetValue(System.String)">
            <summary>
            Set the value of the MyNoteBox control and attempt to publish the note.  
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.CreateInternalTextBoxValueProvider">
            <summary>
            CreateInternalTextBoxValueProvider
            </summary>
            <returns></returns>
            <exception cref="T:System.Windows.Automation.ElementNotEnabledException"/>
        </member>
        <member name="P:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.InternalTextBoxValueProvider">
            <summary>
            Whenever possible, delegate the implementation of <c>IValueProvider</c>
            to the underlying <c>TextBox</c>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.IsReadOnly">
            <summary>
            IsReadOnly
            </summary>
            <remarks>
            Directly delegate to the underlying <c>TextBox</c>
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.AutomationPeers.MyNoteBoxAutomationPeer.Value">
            <summary>
            Value
            </summary>
            <remarks>
            Directly delegate to the underlying <c>TextBox</c>
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.MyPresenceChooserAutomationPeer">
            <summary>
            MyPresenceChooserAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyPresenceChooserAutomationPeer.#ctor(Microsoft.Lync.Controls.MyPresenceChooser)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.MyStatusAreaAutomationPeer">
            <summary>
            MyStatusAreaAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.MyStatusAreaAutomationPeer.#ctor(Microsoft.Lync.Controls.MyStatusArea)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ScheduleMeetingButtonAutomationPeer">
            <summary>
            ScheduleMeetingButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ScheduleMeetingButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.ScheduleMeetingButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.SendEmailButtonAutomationPeer">
            <summary>
            SendEmailButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.SendEmailButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.SendEmailButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.SendFileButtonAutomationPeer">
            <summary>
            SendFileButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.SendFileButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.SendFileButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ShareDesktopButtonAutomationPeer">
            <summary>
            ShareDesktopButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ShareDesktopButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.ShareDesktopButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.StartVideoCallButtonAutomationPeer">
            <summary>
            StartVideoCallButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.StartVideoCallButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.StartVideoCallButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer">
            <summary>
            UCBaseAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.#ctor(Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
            <exception cref="T:System.ArgumentNullException">Thrown when <c>control</c> parameter is null</exception>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Override GetPattern
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.GetNameCore">
            <summary>
            GetNameCore override.  Return an instance-specific string to identify the control.
            Each control will override this to provide an implementation relevant to that control's
            available information, and by default it will not be instance-specific.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.GetAutomationIdCore">
            <summary>
            GetAutomationIdCore override.  Return a control-specific string to identify the type of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.GetClassNameCore">
            <summary>
            GetClassNameCore override.  Return a control-specific string to identify the type of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Operation cannot be performed</exception>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any selection and then selects the current element.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Operation cannot be performed</exception>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Operation cannot be performed</exception>
        </member>
        <member name="P:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.OwnerTreeViewItem">
            <summary>
            Gets the TreeViewItem that owns this TreeViewItemAutomationPeer.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.AutomationPeers.UCTreeViewItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements
            <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" />
            and acts as the container for the calling object.
            </summary>
            <value>The UI automation provider.</value>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.LyncServiceProvider">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.GetProvider(System.Windows.DependencyObject)">
            <summary>
            Get the <c>IUCClientModel</c> for the <paramref name="dependencyObject"/>
            </summary>
            <param name="dependencyObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.SetProvider(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Set the global <c>IUCClientModel</c> to <paramref name="ucClientModel"/>
            </summary>
            <param name="ucClientModel"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.GetIsInDesignMode(System.Windows.DependencyObject)">
            <summary>
            Check to see if we are currently in design mode
            </summary>
            <param name="dependencyObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.CreateUCClient(System.Boolean)">
            <summary>
            Create a concrete implementation of <c>IUCClientModel</c>
            </summary>
            <param name="createTimer"><c>true</c> if, in the case when creating a <c>UCClientModel</c> fails, a timer should be created to poll for a new connection</param>
            <returns>A concrete implementation of <c>IUCClientModel</c>.  Must never return <c>null</c></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.CreateAndStartLookupTimer">
            <summary>
            Creates a timer that is associated with this 'window' used
            to poll for a new connection to OC
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.LyncServiceProvider.HandleUCClientModelLookupTimerTick(System.Object,System.EventArgs)">
            <summary>
            Called every '_connectToClientPollingInterval'.  Tries to recreate the 
            <c>UCClientModel</c>, and if that succeeds, tells all the UCBase controls
            in this window to wire to a new <c>IUCClientModel</c>.
            </summary>
            <param name="sender">The <c>DispatcherTimer</c> used to do the polling</param>
            <param name="e"></param>
        </member>
        <member name="E:Microsoft.Lync.Controls.LyncServiceProvider.ContextChanged">
            <summary>
            Event which is fired when Context property changes.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.GenericThemeProvider">
            <summary>
            LocalizedStrings class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.GenericThemeProvider.GetInstance">
            <summary>
            Get a single instance of Generic.xaml ResrouceDictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Clock">
            <summary>
            Clock Control
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Clock.TimeProperty">
            <summary>
            Identifies the Time dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Clock.TimeZoneBiasProperty">
            <summary>
            Identifies the TimeZoneBias dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Clock.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Clock.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>Clock</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Clock.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Clock.TimeZoneBias">
            <summary>
            Time zone bias
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactContentPresenter">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.ParentContextProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.ParentContext"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.ContentProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.Content"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.ContentTypeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.ContentType"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.PersonContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.PersonContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.GroupContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.GroupContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.TelephoneContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.TelephoneContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.BotContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.BotContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.BackgroundProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.Background"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.ContextualInformation"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactContentPresenter.SelectedTabIndexProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactContentPresenter.SelectedTabIndex"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.#ctor">
            <summary>
            Constructs an instance of the ContactContentPresenter class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.ChooseTemplate(System.Object)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.RefreshTemplate">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.OnContentChanged(System.Object)">
            <summary>
            Called when <c>Content</c> or <c>ContentType</c> Property changes. Set the <c>ContentTemplate</c>
            to be used based on value returned by <c>ChooseTemplate</c> method.
            </summary>
            <param name="newContent"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.OnContentTypeChanged(System.Object)">
            <summary>
            Called when <c>ContentType</c> Property has changed. Set the <c>ContentTemplate</c>
            to be used based on value returned by <c>ChooseTemplate</c> method.
            </summary>
            <param name="newContentType"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.HandleContentPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle <c>ContentProperty</c> Dependency Property change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.HandleContentTypePropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle <c>ContentProperty</c> Dependency Property change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactContentPresenter.HandleParentContextPropertyChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle <c>ParentContextProperty</c> Dependency Property change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.ParentContext">
            <summary>
            Gets or sets a context <c>Object</c> to be passed to templates
            used by this <c>ContentPresenter</c> control
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.Content">
            <summary>
            Gets or sets the model object that is used to generate this <c>ContentPresenter</c> 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.ContentType">
            <summary>
            Gets or sets an enumerated value that identifies the type of model that is used to generate this <c>ContentPresenter</c> 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.PersonContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.GroupContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.TelephoneContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.BotContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.Background">
            <summary>
            Gets or sets the Background <c>Brush</c> property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactContentPresenter.SelectedTabIndex">
            <summary>
            Gets or sets the index of the tab item to display if the active template has a Tab control that
            chooses to use this property
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactItemContentPresenter">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.IsSelected"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.PersonTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.PersonTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.GroupTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.GroupTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.TelephoneTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.TelephoneTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.BotTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.BotTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ShowFriendlyName"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButtonProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButton"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItemContentPresenter.IsNoteToggleButtonCheckedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.IsNoteToggleButtonChecked"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItemContentPresenter.#ctor">
            <summary>
            Constructs an instance of the ContactItemContentPresenter class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItemContentPresenter.GetTemplatedChild``1(System.String)">
            <summary>
            Find a child control in applied <c>DataTemplate</c>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="partName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItemContentPresenter.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes 
            (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItemContentPresenter.ChooseTemplate(System.Object)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.ContactItemContentPresenter.OnTemplateApplied">
            <summary>
            Raised when the control has applied a template for the contact.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButtonVisibility">
            <summary>
            Gets or sets an enumerated value which indicates whether or not the call button on this contact item's template is visible.
            This property is updated based on <c>MouseEnter</c> and <c>MouseLeave</c> events.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.IsSelected">
            <summary>
            Gets or sets a boolean value that determines if this <c>ContactItemContentPresenter</c> is currently selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.PersonTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.GroupTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.TelephoneTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.BotTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ShowFriendlyName">
            <summary>
            Gets or sets a boolean value which determines whether or not this contact item displays
            a friendly name string or a SIP URI.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.CallButton">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.ContactLayoutView">
            <summary>
            Gets or sets an enumerated value which determines whether this contact item is displayed
            in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> or <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItemContentPresenter.IsNoteToggleButtonChecked">
            <summary>
            Gets or sets a boolean value which determines the state of the note toggle button.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactListGroupItem">
            <summary>
            Reserved for internal use.  This control is used to display the group nodes in a <see cref="T:Microsoft.Lync.Controls.ContactList"/> control.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCTreeViewItem">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem.PartNameCallButton">
            <summary> The call button part name </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem._callButton">
            <summary> The call button part </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem.SourceProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeViewItem.Source"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeViewItem.ContextualInformation"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem.CallButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeViewItem.CallButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeViewItem.IsContainerSelectedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeViewItem.IsContainerSelected"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.HandleDropDownOpened(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.HandleDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.RefreshCallButtonVisibility">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a <see cref="T:Microsoft.Lync.Controls.UCTreeViewItem"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> is a <see cref="T:Microsoft.Lync.Controls.UCTreeViewItem"/>; otherwise, false.
            </returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container element to display the specified item.
            </summary>
            <param name="element">Container element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed as 
            a <see cref="T:Microsoft.Lync.Controls.UCTreeViewItem"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Lync.Controls.UCTreeViewItem"/> element to clear.</param>
            <param name="item">The item that is contained in the <see cref="T:Microsoft.Lync.Controls.UCTreeViewItem"/>.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.KeyDown"/> event when the <see cref="T:System.Windows.Controls.TreeViewItem"/> has focus.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnCreateAutomationPeer">
            <summary>
            OnCreateAutomationPeer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.LaunchDefaultConversation">
            <summary>
            Launch DEfault conversation modality for this item
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.HandleMouseDown(System.Boolean)">
            <summary>
            HandleMouseDown
            </summary>
            <param name="isLeftButton"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.OnSourceChanged(System.Object,System.Object)">
            <summary>
            Called when <c>Source</c> property has changed
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.HandleMouseLeave(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Update <c>HoveredItem</c> 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeViewItem.HandleMouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Update <c>HoveredItem</c> 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.Source">
            <summary>
            Specifies a contact or distribution group to which this control should be bound.
            </summary>
            <remarks>
            Valid values for this property include:
            <list type="table">
            <listheader>
                  <term>Type</term>
                  <description>Value</description>
            </listheader>
            <item>
                  <term>string</term>
                  <description>Search fragment, such as <c>mary</c></description>
            </item>
            <item>
                  <term>string</term>
                  <description>SIP URI, such as <c>sip:mary@contoso.com</c></description>
            </item>
            <item>
                  <term>Contact</term>
                  <description><see cref="T:Microsoft.Lync.Model.Contact">Microsoft.Lync.Model.Contact</see> object, obtained using the Lync Platform API.</description>
            </item>
            <item>
                  <term>DistributionGroup</term>
                  <description><see cref="T:Microsoft.Lync.Model.Group.DistributionGroup">Microsoft.Lync.Model.Group.DistributionGroup</see> object, obtained using the Lync Platform API.</description>
            </item>DistributionGroup
            </list>
            These options are shown in increasing order of performance.
            If a search fragment is used,  the control will perform a best-effort match (non-deterministic) 
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when an invalid object type is provided.</exception>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.CallButtonVisibility">
            <summary>
            Gets or sets an enumerated value which indicates whether or not the call button on this contact item's template is visible.
            This property is updated based on <c>MouseEnter</c> and <c>MouseLeave</c> events.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.IsContainerSelected">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.ParentTreeView">
            <summary>
            Parent List Box Control
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeViewItem.PopupContactCard">
            <summary>
            Popup Contact Card
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListGroupItem.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListGroupItem.Model"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListGroupItem.IsRenameModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListGroupItem.IsRenameMode"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListGroupItem.GroupRenameCommandProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListGroupItem.GroupRenameCommand"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListGroupItem.GroupViewBySettingProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListGroupItem.GroupViewBySetting"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListGroupItem.ShowContactCountProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListGroupItem.ShowContactCount"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.#ctor">
            <summary>
            Constructs an instance of a ContactListGroupItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether an object is a <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> is a <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/>; otherwise, false.
            </returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/> to display content.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/> to use as a container for content.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified container element to display the specified item.
            </summary>
            <param name="element">Container element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes all templates, styles, and bindings for the object displayed as 
            a <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/>.
            </summary>
            <param name="element">The <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/> element to clear.</param>
            <param name="item">The item that is contained in the <see cref="T:Microsoft.Lync.Controls.ContactListGroupItem"/>.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.OnSourceChanged(System.Object,System.Object)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.HandleGroupRenameTextboxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle lost focus on group rename <c>TextBox</c> control.
            This event will trigger the execution of the rename command
            in the model
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.HandleGroupRenameTextboxKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handle Enter on Group Rename TextBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.InvokeRenameCommandInGroup">
            <summary>
            Call group rename command in <g>IGroupModel</g> model object
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.UpdateContactSeparator">
            <summary>
            Toggles contact separator for last contact in FrequentContacts group 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListGroupItem.HandleIsGroupRenameModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle changes on <c>IsGroupRenameMode</c> property
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListGroupItem.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListGroupItem.IsRenameMode">
            <summary>
            Gets a boolean value which indicates whether or not this control is currently in <c>rename</c> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListGroupItem.GroupViewBySetting">
            <summary>
            Gets or sets an enumerated value which identifies the method by which contacts should be grouped.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListGroupItem.ShowContactCount">
            <summary>
            Gets or sets a boolean value which indicates whether or not the count of contacts contained in each group is displayed.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListGroupItem.GroupRenameCommand">
            <summary>
            A command which, when executed, will rename a custom group on the contact list.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ContactListMenu">
            <summary>
            A context menu for the <see cref="T:Microsoft.Lync.Controls.ContactList"/>, <see cref="T:Microsoft.Lync.Controls.CustomContactList"/>
            and <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> controls which mimics the context menu of Lync.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContactListMenu.#ctor">
            <summary>
            Construct the menu and set the default style
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContactListMenu.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ContactListMenu.Manager">
            <summary>
            The object which serves as a DataContext for the context menu
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactSearch">
            <summary>
            <see cref="T:Microsoft.Lync.Controls.ContactSearch"/> combines the functionality of the 
            <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> and <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> controls
            into a single, self contained control.
            </summary>
            <remarks>
            To display search results and search input in separate locations on a page, use the ContactSearchInputBox 
            and ContactSearchResultList controls as separate controls. The ContactSearch control provides an input box 
            for searching for contacts by name or keyword,
            and a result list for displaying the set of contacts which were found.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.SearchTypeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.SearchType"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.ContextualInformation"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.MaxResultsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.MaxResults"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.InitializationFailedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.InitializationFailed"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.InitializationErrorProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.InitializationError"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearch.InitializationErrorMessageProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearch.InitializationErrorMessage"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearch.#ctor">
            <summary>
            Initializes a new instance of the ContactSearch class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearch.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes 
            (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. 
            In simplest terms, this means the method is called just before a UI element displays in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearch.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the ContactSearchAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.SearchType">
            <summary>
            Gets or sets a SearchType enumeration, which may specify either Keyword or Name.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.MaxResults">
            <summary>
            Gets or sets an int specifying the maximum number of results to return.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.InitializationFailed">
            <summary>
            Gets a boolean value indicating whether initialization of the layer between Lync 
            and the Lync controls has failed. 
            </summary>
            <value>True if initialization failed, false if initialization succeeded. The default value is false.</value>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.InitializationError">
            <summary>
            Gets the exception object which is created when initialization fails. 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearch.InitializationErrorMessage">
            <summary>
            Gets a descriptive message providing troubleshooting information when initialization fails.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactSearchInputBox">
            <summary>
            Use the <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> control to enable users to search their organization for people based on name, 
            phone number, or skill.
            </summary>
            <remarks>
            <p>
            The <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> control displays a text box where users enter a search string. 
            The search is executed automatically, one second after the search text is changed, or 
            explicitly when the user presses Enter in the ContactSearchInputBox. Once a search 
            is complete, the results appear in a <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> control. The <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> control 
            provides an input box for searching for contacts by name or keyword.
            </p>
            <p>
            The <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> and <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> controls, while related, are designed 
            as separate controls to allow the developer to display search results and search 
            input in separate locations on a page. Use the <see cref="T:Microsoft.Lync.Controls.ContactSearch"/> control in Lync  
            Control applications to display the <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> and <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> controls together in the same location on a page.
            </p>
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCBase">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.ContactManagerProperty">
            <summary>
            Internal - ContactManager dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.SelfProperty">
            <summary>
            Internal - Self dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.IsSignedInProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCBase.IsSignedIn"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.IsInResiliencyModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCBase.IsInResiliencyMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.InitializationFailedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCBase.InitializationFailed"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.InitializationErrorProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCBase.InitializationError"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCBase.InitializationErrorMessageProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCBase.InitializationErrorMessage"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.#ctor">
            <summary>
            Constructs an instance of the UCBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.ExtractTemplatePart``1(System.String)">
            <summary>
            Extracts the template part of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type of the template part to be extracted.</typeparam>
            <param name="partName">The name of the template part.</param>
            <returns>The requested template part.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.ExtractTemplatePart``1(System.String,System.Boolean)">
            <summary>
            Extracts the template part of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">The type of the template part to be extracted.</typeparam>
            <param name="partName">The name of the template part.</param>
            <param name="isPartRequired">True if this part is required, false if it is optional.</param>
            <returns>The requested template part.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.UnwireUCClient">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnLoaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnUnloaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnIsInResiliencyModePropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnClientDisconnected">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnSelfModelPropertyChanged(Microsoft.Lync.Controls.Internal.Model.ISelfModel,Microsoft.Lync.Controls.Internal.Model.ISelfModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnContactManagerPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel,Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.GetUCClientModel">
            <summary>
            Retrieves <c>IUCClientModel</c> from <c>LyncServiceProvider</c>
            </summary>
            <returns></returns>
        </member>
        <member name="E:Microsoft.Lync.Controls.UCBase.InitializationCompleted">
            <summary>
            Fired when the Initialization is completed
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.PerfTracker">
            <summary>
            Event management and tracing for performance testing
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.IsSignedIn">
            <summary>
            Gets a bool value which indicates whether or not the currently connected Lync session is signed in.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.IsInResiliencyMode">
            <summary>
            Gets a bool value which indicates whether or not the currently connected Lync session is in resiliency mode.
            In resiliency mode, certain application features may be unavailable.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.InitializationFailed">
            <summary>
            Gets a bool value which indicates whether or not the establishment of a connection to Lync failed.
            </summary>
            <value>True if the initialization failed, False if it succeeded.</value>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.InitializationError">
            <summary>
            When <see cref="P:Microsoft.Lync.Controls.UCBase.InitializationFailed"/> is <c>true</c>, this property stores the exception that was generated during initialization.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.InitializationErrorMessage">
            <summary>
            When <see cref="P:Microsoft.Lync.Controls.UCBase.InitializationFailed"/> is <c>true</c>, this property stores the a descriptive message that was generated during initialization.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.UCClientModel">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCBase.IsLoadedAndIsInVisualTree">
            <summary>
            Determine if the control is loaded and is rooted in a connected visual tree.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCBase.PerformanceTracker">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.PerformanceTracker.#ctor(Microsoft.Lync.Controls.UCBase)">
            <summary>
            Reserved for internal use.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCBase.PerformanceTracker.LogPopulated">
            <summary>
            Invoke this method to notify listeners that this control is populated with contact
            information, and ready to use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.IsClearEnabledProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.IsClearEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.ResultsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.Results"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.SearchTypeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchType"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.SearchStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchState"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.MaxResultsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.MaxResults"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.SearchTextInputProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchTextInput"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.IsSkillSearchEnabledProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.IsSkillSearchEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchInputBox.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchInputBox.Model"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.#ctor">
            <summary>
            Initializes a new instance of the <c>ContactSearchInputBox</c> class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnUnloaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.UnwireUCClient">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnContactManagerPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel,Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnModelChanged(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel,Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            OnModelChanges
            </summary>
            <param name="oldModel"></param>
            <param name="newModel"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchInputBox.OnCreateAutomationPeer">
            <summary>
            Return the <c>AutomationPeer</c> object for the <c>ContactSearchInputBox</c> control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.IsClearEnabled">
            <summary>
            Gets a bool that specifies whether the <c>ClearButton</c> is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.Results">
            <summary>
            Gets a <see cref="T:Microsoft.Lync.Controls.SearchResultCollection"/> object containing the results of a completed search operation.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchType">
            <summary>
            Gets or sets an enumerated value which determines the type of search to be performed by this control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchState">
            <summary>
            Gets a SearchState enumeration, which will specify either Cleared, Searching, Finished, or Error.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.SearchTextInput">
            <summary>
            Gets or sets the search input text. When set, any current
            search operation is cancelled, search results are reset, and a new search operation is initiated.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.MaxResults">
            <summary>
            Gets or sets the maximum number of results to return.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.IsSkillSearchEnabled">
            <summary>
            Gets or sets a bool value which indicates whether or not the skill search feature is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.Model">
            <summary>
            Gets or sets the ModelProperty.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.TextSearchBox">
            <summary>
            Internal implementation property to control <c>TextSearchBox</c> property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchInputBox.CurrentText">
            <summary>
            Gets or sets search box text.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactSearchInputBox.SearchResultCallback">
            <summary>
            SearchResultCallback Helper
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactSearchResultList">
            <summary>
            Use the <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> control to display the result of a search 
            performed by the <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> control.
            </summary>
            <remarks>
            <para>This control provides an result list for a contact search. To initiate a search, 
            this control must be paired with a <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/>.</para>
            <para>The <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/> and <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/> controls, 
            while related, are designed as separate controls 
            to allow the developer to display search results and search input in separate locations on a page.</para>
            <para>Alternatively, use the <see cref="T:Microsoft.Lync.Controls.ContactSearch"/> control, which encapsulates both features in
            a single, self contained control.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCListBox">
            <summary>
            Reserved for internal use. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox._logger">
            <summary>
            Debug logger
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.ShowFriendlyName"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.ContextualInformation"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.PersonItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.PersonItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.GroupItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.GroupItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.TelephoneItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.TelephoneItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBox.BotItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBox.BotItemTemplate"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes any bindings and templates applied to the item container for the specified content.
            </summary>
            <param name="element">The combo box item used to display the specified content.</param>
            <param name="item">The item content.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.GetAllSelectedModels">
            <summary>
            Get all <c>IContactModel</c> currently selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.HandleContextMenuOpen(System.Object,System.EventArgs)">
            <summary>
            Configure the ContextMenu
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBox.HandleKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles key press:  Launch IM on selected contacts if SPACE or ENTER
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.ShowFriendlyName">
            <summary>
            Gets or sets whether contacts in the list display friendly name or URI.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.PersonItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.GroupItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.TelephoneItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.BotItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBox.SelectedItemContainers">
            <summary>
            Return Selected <c>UCListBoxItem</c> items currently selected
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchResultList._logger">
            <summary>
            Debug logger
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchResultList.ResultsStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchResultList.ResultsState"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactSearchResultList.SearchTypeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactSearchResultList.SearchType"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.#ctor">
            <summary>
            Initializes the ContactSearchResultList class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.OnApplyTemplate">
            <summary>
            OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Checks whether the item is a <c>ContactSearchResultListItem</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item. 
            </summary>
            <returns>
            A <see cref="T:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem"/> corresponding to a specified item.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes any bindings and templates applied to the item container for the specified content.
            </summary>
            <param name="element">The item used to display the specified content.</param>
            <param name="item">The item content.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactSearchResultList.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return a ContactSearchResultListAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchResultList.SearchType">
            <summary>
            Gets or sets an enumerated value which determines the type of search to be performed by this control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactSearchResultList.ResultsState">
            <summary>
            Gets or sets an enumerated value which represents the status of the current search operation.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ContextMenuHost">
            <summary>
            Control which hosts a context menu
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactItem">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactBase">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactBase._previousCreateContactAsynchResult">
            <summary>
            The last <c>IAsynchModelResult</c> returned from the DVM
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactBase.SourceProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactBase.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.Model"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactBase.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.ContextualInformation"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactBase.DisplayNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.DisplayName"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.#ctor">
            <summary>
            Constructs an instance of the ContactBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnClientDisconnected">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnUnloaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnContactPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnContextualInformationChanged(Microsoft.Lync.Controls.ConversationContextualInfo,Microsoft.Lync.Controls.ConversationContextualInfo)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.OnSourceChanged(System.Object,System.Object)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.Populate(System.Object)">
            <summary>
            Populated the model with a an OCOM object.
            Do not invoke this method directly.  Use <see cref="M:Microsoft.Lync.Controls.ContactBase.AttachContact(System.Object)"/> instead,
            which properly logs the event to the performance tracking system.
            </summary>
            <param name="contact"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.AttachContact(System.Object)">
            <summary>
            Attach the Contact object to the Model.
            </summary>
            <param name="contact">
            Valid type of 'contact' are:
            - IContactModel
            - String
            - OCOM Contact
            
            All other types will throw an ArgumentException.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.HandleContactPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handle property changed events for the IContactModel set
            in my Model property
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactBase.HandlePresenceItemsPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handle property changed events for the IPresenceItemsModel set
            in my IContactModel set in Model property
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactBase.DisplayName">
            <summary>
            Gets the display name of this contact or distribution group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactBase.Source">
            <summary>
            Specifies a contact or distribution group to which this control should be bound.
            </summary>
            <remarks>
            Valid values for this property include:
            <list type="table">
            <listheader>
                  <term>Type</term>
                  <description>Value</description>
            </listheader>
            <item>
                  <term>string</term>
                  <description>Search fragment, such as <c>mary</c></description>
            </item>
            <item>
                  <term>string</term>
                  <description>SIP URI, such as <c>sip:mary@contoso.com</c></description>
            </item>
            <item>
                  <term>Contact</term>
                  <description><see cref="T:Microsoft.Lync.Model.Contact">Microsoft.Lync.Model.Contact</see> object, obtained using the Lync Platform API.</description>
            </item>
            <item>
                  <term>DistributionGroup</term>
                  <description><see cref="T:Microsoft.Lync.Model.Group.DistributionGroup">Microsoft.Lync.Model.Group.DistributionGroup</see> object, obtained using the Lync Platform API.</description>
            </item>DistributionGroup
            </list>
            These options are shown in increasing order of performance.
            If a search fragment is used,  the control will perform a best-effort match (non-deterministic) 
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when an invalid object type is provided.</exception>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactBase.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactBase.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactBase.IsContactModelOwner">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.IsSelected"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.ParentContextProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.ParentContext"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.PersonContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.PersonContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.GroupContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.GroupContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.TelephoneContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.TelephoneContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.BotContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.BotContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.PersonTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.PersonTwoLineContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.GroupTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.GroupTwoLineContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.TelephoneTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.TelephoneTwoLineContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.BotTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.BotTwoLineContentTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.CallButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.CallButtonVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.ShowFriendlyName"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactItem.IsNoteToggleButtonCheckedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactItem.IsNoteToggleButtonChecked"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.#ctor">
            <summary>
            Constructs an instance of the ContactItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.GetTemplatedChild``1(System.String)">
            <summary>
            Find a child control in applied <c>DataTemplate</c>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="partName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.LaunchDefaultConversation">
            <summary>
            Start default conversation based on current <c>IContactModel</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactItem.OnContactItemTemplateApplied(System.Object)">
            <summary>
            Called when <c>ContactItemContentPresenter</c> applies a new template
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.ContactItem.OnItemTemplated">
            <summary>
            Raised when the control has applied a template for the contact.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.ParentContext">
            <summary>
            Gets or sets a context <c>Object</c> to be passed to templates
            used by this <c>ContentPresenter</c> control
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.IsSelected">
            <summary>
            Gets or sets if this <c>ContactItem</c> is currently selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.PersonContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.PersonTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.GroupContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.GroupTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.TelephoneContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.TelephoneTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.BotContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.BotTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.CallButtonVisibility">
            <summary>
            Gets or sets an enumerated value which indicates whether or not the call button on this contact item's template is visible.
            This property is updated based on <c>MouseEnter</c> and <c>MouseLeave</c> events.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.ContactLayoutView">
            <summary>
            Gets or sets an enumerated value which determines whether this contact item is displayed
            in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> or <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.ShowFriendlyName">
            <summary>
            Gets or sets a boolean value which determines whether or not this contact item displays
            a friendly name string or a SIP URI.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactItem.IsNoteToggleButtonChecked">
            <summary>
            Gets or sets a boolean value which determines the state of the note toggle button.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.MyNoteBox">
            <summary>
            Use the MyNoteBox control in Lync Control applications 
            to display and change the current user's personal note.
            </summary>
            <remarks>
            The user can change their personal note by typing in new text and pressing the Enter key.
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.SelfBase">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SelfBase.ModelProperty">
            <summary>
            ModelProperty Dependency Property
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SelfBase.DisplayNameProperty">
            <summary>
            DisplayName Dependency Property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.#ctor">
            <summary>
            Constructs an instances of the SelfBase class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.OnSelfModelPropertyChanged(Microsoft.Lync.Controls.Internal.Model.ISelfModel,Microsoft.Lync.Controls.Internal.Model.ISelfModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.OnUnloaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SelfBase.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SelfBase.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SelfBase.DisplayName">
            <summary>
            Gets the display name of the currently logged in user.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyNoteBox.PersonalNoteProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyNoteBox.PersonalNote"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.#ctor">
            <summary>
            Initializes a new instance of the MyNoteBox class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnIsInResiliencyModePropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.CommitCurrentNote">
            <summary>
            Commit whatever value is in the <c>TextBox</c>
            </summary>
            <remarks>
            Internal so that the <c>MyNoteBoxAutomationPeer</c> can 
            programmatically set the note
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.EnterButNotShiftPressed(System.Windows.Input.KeyEventArgs)">
            <summary>
            Return true if <paramref name="e"/> represents the user pressing 'Enter'
            but not modifying it with 'shift'
            </summary>
            <param name="e">The event to consider</param>
            <returns><c>True</c> if 'enter' was pressed and 'shift' was not, <c>false</c> otherwise</returns>
            <remarks>
            In .NET 4, Enum.HasFlag has been added to allow for easier code sharing,
            but until then, the implementation for this method will need to be different
            for Silverlight than for WPF
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.SetEditingMode(System.Boolean)">
            <summary>
            Set whether <c>MyNoteBox</c> is in editing mode or not
            </summary>
            <param name="editingMode"></param>
            <remarks>
            When <c>MyNoteBox</c> is in editing mode, the user can enter text into
            the <c>TextBox</c>.  To enter and exit this mode, a <c>ToggleButton</c>
            sits on top of the text fields, and when it is checked, the control
            is in editing mode, otherwise, it is not in editing mode
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.ReevaluateHasFocus">
            <summary>
            Reevaluate whether this control has the focus, and, if it does, go to the right visual state
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyNoteBox.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>MyNoteBox</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyNoteBox.PersonalNote">
            <summary>
            Gets the current user's personal note.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.MyPresenceChooser">
            <summary>
            The MyPresenceChooser control displays and changes 
            the user's current presence status selection.
            </summary>
            <remarks>
            Use the MyPresenceChooser control in Microsoft Lync Control 
            applications to display and change the user's current presence status selection. 
            Clicking the control displays a list of presence status options, for example 
            "Be Right Back". The user can change their presence status by selecting 
            one of these options. The MyPresenceChooser control includes the ability 
            to show and select custom presence states. This control can only be applied 
            to the currently signed-in user and therefore does not have a <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property.
            Alternatively, the <see cref="T:Microsoft.Lync.Controls.MyStatusArea"/> provides similar functionality,
            integrated with other self-presence features such as the users name, photo, and
            editable personal note.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyPresenceChooser.AvailabilityStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyPresenceChooser.AvailabilityState"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.#ctor">
            <summary>
            Initializes a new instance of the MyPresenceChooser class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.HandleAvailabilityStatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Identifies the FilterPropertyChanged dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyPresenceChooser.OnCreateAutomationPeer">
            <summary>
            Returns the <c>MyPresenceChooserAutomationPeer</c> object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyPresenceChooser.AvailabilityState">
            <summary>
            Gets an enumerated value that represents the currently signed-in user's availability.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.MyStatusArea">
            <summary>
            The MyStatusArea control displays the note string, an 
            availability icon/photo, a textblock with the 
            user's name, and a textblock with the user's location.
            </summary>
            <remarks>
            The MyStatusArea control also displays 
            the MyStatusArea and MyPresenceChooser controls together. To display 
            these in separate locations, use MyNoteBox and MyPresenceChooser as 
            separate controls. Clicking the presence status box displays a list of 
            presence options, for example "Be Right Back". The user can change 
            their presence by selecting one of these. The user can change 
            their note string by typing in new text and pressing the Enter key.
            Separately, the <see cref="T:Microsoft.Lync.Controls.MyPresenceChooser"/> and <see cref="T:Microsoft.Lync.Controls.MyNoteBox"/> controls
            provide similar functionality, for applications where a customized layout is necessary.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyStatusArea.PhotoDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyStatusArea.PhotoDisplayMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyStatusArea.AvailabilityStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyStatusArea.AvailabilityState"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyStatusArea.PersonalNoteProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyStatusArea.PersonalNote"/> dependency property.
            </summary>
            <remarks>This will be the OOF note if the user is OOF and no Personal Note is set</remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.MyStatusArea.LocationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.MyStatusArea.Location"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.#ctor">
            <summary>
            Initializes a new instance of the MyStatusArea class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.MyStatusArea.OnCreateAutomationPeer">
            <summary>
            Return the <c>MyStatusAreaAutomationPeer</c> object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyStatusArea.Location">
            <summary>
            Gets a string that shows the location of the currently signed in user.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyStatusArea.PhotoDisplayMode">
            <summary>
            Gets or sets an enumeration value that determines the presence photo display mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyStatusArea.AvailabilityState">
            <summary>
            Gets an enumeration value that represents the contact's availability.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.MyStatusArea.PersonalNote">
            <summary>
            Gets a string that shows the content of the note box for the signed-in user.
            </summary>
            <remarks>This will be the OOF note if the user is OOF and no personal note is set.</remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.ScheduleMeetingButton">
            <summary>
            Use the ScheduleMeetingButton control in Lync Control 
            applications to open a Microsoft Outlook meeting invite dialog with a bound contact.
            </summary>
            <remarks>
            The control is designed to mimic the functionality provided by 
            the corresponding button on the Quick Connect toolbar of the ContactCard. 
            As such, it must be bound to a contact using the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property before 
            it can be used. When clicked, it launches the Microsoft Outlook dialog 
            to initiate the desired action with that contact. This button is not 
            a general purpose Outlook Integration tool. It is intended to be used 
            together with other Lync Controls to provide a full set of 
            collaboration options for interacting with a specific contact or 
            distribution group.
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactButton">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactButton.ContentProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactButton.Content"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactButton.IsButtonEnabledProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactButton.IsButtonEnabled"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactButton.#ctor">
            <summary>
            Constructs an instance of the ContactButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactButton.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactButton.RaiseButtonEnabledPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Microsoft.Lync.Controls.ContactButton.IsButtonEnabledChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactButton.IsButtonEnabled">
            <summary>
            Gets a boolean value which indicates or not the button contained in this control's template is enabled. 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactButton.Content">
            <summary>
            Gets or sets the content of this control.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.ContactButton.IsButtonEnabledChanged">
            <summary>
            Occurs when the <c>IsButtonEnabled</c> property changes.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ScheduleMeetingButton.#ctor">
            <summary>
            Initializes a new instance of the ScheduleMeetingButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ScheduleMeetingButton.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the ScheduleMeetingButtonAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.SearchResult">
            <summary>
            A data structure which contains a single search result.  See <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/>.
            </summary>
            <remarks>
            A search <see cref="P:Microsoft.Lync.Controls.SearchResult.Result">result</see> consists of a single contact or distribution group.
            For skill searches, the result also contains a <see cref="P:Microsoft.Lync.Controls.SearchResult.HitHighlightSummary">string</see> which 
            highlights matches for the contact's skill description.
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResult.Result">
            <summary>
            The contact or distribution group which was returned for this search result.
            </summary>
            <remarks>
            This value references either a <see cref="T:Microsoft.Lync.Model.Contact"/>
            or a  <see cref="T:Microsoft.Lync.Model.Group.DistributionGroup"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResult.HitHighlightSummary">
            <summary>
            An XML string which describes the matches in a Skill search summary.
            </summary>
            <remarks>
            This string contains a sequence of skills which describe the contact found in the <see cref="P:Microsoft.Lync.Controls.SearchResult.Result"/>.
            The skill descriptions are separated by delimiters, and within each delimited sstring, 
            there is additional XML markup which identifies the specific word or words which matched the search.
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResult.Contact">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SearchResultCollection">
            <summary>
            A data structure which holds the result set and metadata which describes a search operation that
            has been executed by the <see cref="T:Microsoft.Lync.Controls.ContactSearch"/> control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SearchResultCollection.#ctor(System.Collections.Generic.IList{Microsoft.Lync.Controls.SearchResult},System.Boolean,Microsoft.Lync.Controls.SearchType,System.Uri,Microsoft.Lync.Controls.SearchError,Microsoft.Lync.Controls.SyncState)">
            <summary>
            Constructor.
            </summary>
            <param name="results"></param>
            <param name="isMoreAvailable"></param>
            <param name="searchType"></param>
            <param name="skillSearchQueryUri"></param>
            <param name="searchError"></param>
            <param name="providerSyncState"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.IsMoreAvailable">
            <summary>
            True if more search results available than were returned
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.SearchType">
            <summary>
            Type of search
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.SearchError">
            <summary>
            SearchError
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.SkillSearchQueryUri">
            <summary>
            Uri for the skill search
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.IsSkillSearchPossible">
            <summary>
            Indicate if a skill search possible.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SearchResultCollection.ProviderSyncState">
            <summary>
            Synchronization state for the search provider.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollection">
            <summary>
            A CompoundCollection is an object which takes a list of <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.Items"/>
            which may consist of nested collections, and produces an flattened
            <see cref="T:System.Collections.IEnumerable"/> of the objects it is given.
            This class supports notification on change to the collection, including when
            one of the nested <see cref="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart"/> experiences a change
            to its underlying collection.  (See <see cref="E:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.CollectionChanged"/>).
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.#ctor">
            <summary>
            Initializes a new instance of CompoundCollection that is empty and has default initial capacity.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
             Returns an enumerator object for this CompoundCollection which contains
            the flattened list of all objects in the <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.Items"/> list,
            expanding any <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.Collection"/> objects in place.
            </summary>
            <returns>
             Enumerator object for this CompoundCollection
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.HandleItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            When the <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.Items"/> collection changes, the <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.FlatList"/> is invalidated,
            and nested <see cref="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart"/> collections are wired or unwired for
            change events.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.OnContainedCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when a nested <see cref="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart"/> collection changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.FireCollectionChanged">
            <summary>
            Invalidates the flat list, and fires the collection changed event.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.Items">
            <summary>
            A list of objects or nested collections (which must be wrapped in a <see cref="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart"/>).
            The contents of this list will be flattened when the GetEnumerator method is called.
            This property is accessible in XAML as the content of a <c>CompoundCollection</c> instance.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes, either by adding or removing an item,
            or by observing a change in a nested <see cref="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.FlatList">
            <summary>
            Expands the collection if the list is marked <see cref="F:Microsoft.Lync.Controls.Internal.Common.CompoundCollection._flatListDirty"/>,
            and returns the flattened list.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart">
            <summary>
            When included in the <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollection.Items"/> list, this class
            represents a nested <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.Collection"/> object which is expanded when the
            CompoundCollection.GetEnumerator is invoked.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.CollectionProperty">
            <summary>
            The collection contained by this object
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.CollectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes on the <see cref="F:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.CollectionProperty"/> dependency property. As
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.Collection">
            <summary>
            A property wrapper for the <see cref="F:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.CollectionProperty"/>
            dependency property:<br/>
            The collection contained by this object
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.CollectionChanged">
            <summary>
            Subscribe to this event to be notified when the <see cref="P:Microsoft.Lync.Controls.Internal.Common.CompoundCollectionPart.Collection"/> has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem">
            <summary>
            Reserved for internal use.
            </summary>
            <remarks>
            This control is used to display items in a <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/>.
            It is not intended for use outside of that control.
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCListBoxItem">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.SourceProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.Source"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.Model"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.ShowFriendlyName"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.CallButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.CallButtonVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.ContextualInformation"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.PersonContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.PersonContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.GroupContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.GroupContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.TelephoneContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.TelephoneContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCListBoxItem.BotContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCListBoxItem.BotContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.#ctor">
            <summary>
            Constructs an instance of the UCListBoxItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.HandlePartContactItemOnItemTemplated(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.HandleDropDownOpened(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.HandleDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.RefreshCallButtonVisibility">
            <summary>
            This method updates the CallButtonVisibility based on focus and hover.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.MouseEnter"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.MouseLeave"/> event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.GotFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Provides handling for the <see cref="E:System.Windows.UIElement.LostFocus"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCListBoxItem.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick"/> routed event. 
            </summary>
            <param name="e">The event data. 
            </param>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.Source">
            <summary>
            Specifies a contact or distribution group to which this control should be bound.
            </summary>
            <remarks>
            Valid values for this property include:
            <list type="table">
            <listheader>
                <term>Type</term>
                <description>Value</description>
            </listheader>
            <item>
                <term>string</term>
                <description>Search fragment, such as <c>mary</c></description>
            </item>
            <item>
                <term>string</term>
                <description>SIP URI, such as <c>sip:mary@contoso.com</c></description>
            </item>
            <item>
                <term>Contact</term>
                <description><see cref="T:Microsoft.Lync.Model.Contact">Microsoft.Lync.Model.Contact</see> object, obtained using the Lync Platform API.</description>
            </item>
            <item>
                <term>DistributionGroup</term>
                <description><see cref="T:Microsoft.Lync.Model.Group.DistributionGroup">Microsoft.Lync.Model.Group.DistributionGroup</see> object, obtained using the Lync Platform API.</description>
            </item>DistributionGroup
            </list>
            These options are shown in increasing order of performance.
            If a search fragment is used,  the control will perform a best-effort match (non-deterministic) 
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when an invalid object type is provided.</exception>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.ShowFriendlyName">
            <summary>
            Gets or sets whether contacts in the list are shown using their <c>display names</c> or their <c>SIP URI's</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.CallButtonVisibility">
            <summary>
            Gets or sets an enumerated value which indicates whether or not the call button on this contact item's template is visible.
            This property is updated based on <c>MouseEnter</c> and <c>MouseLeave</c> events.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.PersonContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.GroupContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.TelephoneContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.BotContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.ParentListBox">
            <summary>
            Parent List Box Control
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCListBoxItem.PopupContactCard">
            <summary>
            Popup Contact Card
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.HitHighlightSummaryProperty">
            <summary>
            DependencyProperty back end for HitHighlightSummary property
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.HighlightRunCollectionProperty">
            <summary>
            DependencyProperty back end for HitHighlightDocument property
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.#ctor">
            <summary>
            Constructs a CustomContactsListItem and set the default style key.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.HandlePartContactItemOnItemTemplated(System.Object,System.EventArgs)">
            <summary>
            Extract required PARTs from templated ContactItem
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.HitHighlightSummary">
            <summary>
            Keyword search result highlights
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ContactSearchResultListItem.HighlightRunCollection">
            <summary>
            Highlight Document for Keyword Search
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SendEmailButton">
            <summary>
            Use the SendEmailButton control in Lync Control applications to 
            launch the user's preferred email program and compose an email to a selected contact.
            </summary>
            <remarks>
            The selected contact must have an email address exposed in order for this 
            feature to work. Optionally, you can specify a subject for the email as well. 
            The control is designed to mimic the functionality provided by the corresponding 
            button on the Quick Connect toolbar of the ContactCard. As such, it must be bound 
            to a contact using the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property before it can be used. When clicked, it 
            launches the Microsoft Outlook dialog to initiate the desired action with that 
            contact. This button is not a general purpose Outlook Integration tool. It is 
            intended to be used together with other Lync Controls to provide a full 
            set of collaboration options for interacting with a specific contact or 
            distribution group. Despite the fact that no Lync
            functionality is actually used here, this control leverages the binding model 
            of the other Lync Controls to provide the full scope of features accessible 
            on the ContactCard quick-connect toolbar.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.SendEmailButton.SubjectProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.SendEmailButton.Subject"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SendEmailButton.EmailAddressProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.SendEmailButton.EmailAddress"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendEmailButton.#ctor">
            <summary>
            Initializes a new instance of the SendEmailButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendEmailButton.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendEmailButton.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendEmailButton.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendEmailButton.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the SendEmailButtonAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.SendEmailButton.EmailAddress">
            <summary>
            Gets the email address of the bound contact, as specified by the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SendEmailButton.Subject">
            <summary>
            Gets or sets the email subject.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SendFileButton">
            <summary>
            Use the SendFileButton control in Lync Control applications 
            to launch a conversation with a specified contact, and open a file selection 
            dialog where the user can select a file to transfer to the contact.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendFileButton.#ctor">
            <summary>
            Initializes a new instance of the SendFileButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.SendFileButton.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the SendFileButtonAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.ShareDesktopButton">
            <summary>
            Use the ShareDesktopButton control in Lync SDK applications 
            to launch desktop sharing between the user who activated the control, 
            and another user or group specified by the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ShareDesktopButton.ContextInformationModelsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ShareDesktopButton.ContextInformationModels"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.#ctor">
            <summary>
            Initializes a new instance of the ShareDesktopButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.OnContextualInformationChanged(Microsoft.Lync.Controls.ConversationContextualInfo,Microsoft.Lync.Controls.ConversationContextualInfo)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ShareDesktopButton.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the ShareDesktopButtonAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.ShareDesktopButton.ContextInformationModels">
            <summary>
            Internal list of models for Right button options
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.StartVideoCallButton">
            <summary>
            Use the StartVideoCallButton control in Lync SDK applications to 
            launch a video conversation between the user who activated the control, and another 
            user specified by the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartVideoCallButton.#ctor">
            <summary>
            Initializes a new instance of the StartVideoCallButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartVideoCallButton.OnCreateAutomationPeer">
            <summary>
            Overrides OnCreateAutomationPeer to return the StartVideoAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.UCTreeView">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView._logger">
            <summary>
            Debug logger
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeView.ShowFriendlyName"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeView.ContextualInformation"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView.GroupViewBySettingProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeView.GroupViewBySetting"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.UCTreeView.ContactLayoutView"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.UCTreeView._anchorSelection">
            <summary>
            The anchor selection is the item which is the starting point
            for multiselect operations when SHIFT is depressed.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.#ctor">
            <summary>
            Constructs a instance of the UCTreeView class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Check whether the item is a <c>CustomContactListItem</c>  
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.GetContainerForItemOverride">
            <summary>
            Create <c>ContactListItem</c> container and apply <c>Style</c>
            if there is an explicit one. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepare Contact Item to be displayed.
            </summary>
            <param name="element"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of <c>PrepareContainerForItemOverride</c>
            </summary>
            <param name="element"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Override base class to apply Item Container filer, if any
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.GetAllSelectedModels">
            <summary>
            Get all <c>IContactModel</c> currently selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.ApplyItemContainerVisibilityFilter(System.Predicate{Microsoft.Lync.Controls.UCTreeViewItem})">
            <summary>
            Hide/Show item container based on passed filter
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.SetAnchorSelection(Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            The anchor selection survives all SHIFT-select operations, and is used for 
            providing the starting point of those multi-select actions.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.PerformMouseSelection(Microsoft.Lync.Controls.UCTreeViewItem,System.Boolean)">
            <summary>
            After a MouseDown event, adjust selected nodes
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.SelectNode(Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            Add the given template to the current selection set of the contacts list
            and update the highlight color (VSM) as well as the visibility of the call button appropriately.
            </summary>
            <param name="nodeToSelect"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.DeselectNode(Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            Remove the current (this) node from the selection
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.DeselectAllNodes">
            <summary>
            Remove all nodes from the selection
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.HandleContextMenuOpen(System.Object,System.EventArgs)">
            <summary>
            Dynamically build and load context menu
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.HandleKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles keyboard events:
            - enter/space: quick launch
            - up/down: navigate and select
            - right/left: expand/collapse, navigate, and select
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.PerformKeyboardSelection">
            <summary>
            This method selects the appropriate set of nodes (based on SHIFT modifier presence or absence)
            following a keyboard navigation action (UP/DOWN/LEFT/RIGHT arrow).
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.ShiftSelectItem(Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            This method performs multi-select using the SHIFT key, relative to a given item.
            The selection is based on an anchor (previously selected) item, and selects all nodes 
            between that anchor and the given item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.SelectNodesBetween(Microsoft.Lync.Controls.UCTreeViewItem,Microsoft.Lync.Controls.UCTreeViewItem)">
            <summary>
            Walk the TreeView, and for all expanded TreeViewItems, and select non-group contacts
            which fall between the first and last selected items, inclusive.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.GetTreeViewItemForModel(System.Windows.Controls.ItemsControl,System.Object)">
            <summary>
            Searches the children of the <paramref name="itemsControl"/>, and finds a <see cref="T:System.Windows.Controls.TreeViewItem"/>
            which corresponds to the given <paramref name="model"/>.
            </summary>
            <remarks>
            To find the TreeViewItem for a GroupByBroup, the itemsControl should be the TreeView.
            To find the TreeViewItem for an IContactModel, the itemsControl should be the TreeViewItem of the GroupByGroup
            (because each TreeViewItem is itself an ItemsControl)
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.UCTreeView.HandleContactLayoutViewPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes on the <see cref="P:Microsoft.Lync.Controls.UCTreeView.ContactLayoutView"/> dependency property.
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeView.ShowFriendlyName">
            <summary>
            Gets or sets whether contacts in the list are shown using their <c>display names</c> or their <c>SIP URI's</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeView.GroupViewBySetting">
            <summary>
            Gets or sets an enumerated value which determines the manner in which contacts are grouped on the contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeView.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeView.ContactLayoutView">
            <summary>
            Gets or sets the current layout view for all contact nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.UCTreeView.SelectedItemContainers">
            <summary>
            Return Selected <c>UCTreeViewItem</c> items currently selected
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject">
            <summary>
            Convert a Boolean to a TrueObject or FalseObject
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.TrueObjectProperty">
            <summary>
            TrueString DependencyProperty backend
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.FalseObjectProperty">
            <summary>
            FalseString DependencyProperty backend
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.TrueObject">
            <summary>
            Object to return if the <c>Convert</c> Method's <c>Value</c> parameter is <c>True</c>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.BooleanToSelectedObject.FalseObject">
            <summary>
            Object to return if the <c>Convert</c> Method's <c>Value</c> paramater is <c>False</c>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.DateTimeToShortTimeString">
            <summary>
            DateTimeToShortTimeString
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.DateTimeToShortTimeString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.DateTimeToShortTimeString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToNotBool">
            <summary>
            Convert Bool to Enum by comparing 'value' and 'parameter'
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToNotBool.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an Enum to a boolean value
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>
            True - if the Enum value and parameter value are not equal.
            False - if the Enum value and parameter value are equal.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToNotBool.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert the parameter value back to an Enum.  Not Implemented
            </summary>
            <exception cref="T:System.NotImplementedException"/>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EqualToVisibility">
            <summary>
            BooleanToVisibility
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EqualToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EqualToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString">
            <summary>
            Converts the IdleTimeModel into a string
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a IdleTimeModel into an appropriate idle time string.
            Optionally, show FREE/BUSY info if idle time is not available and/or appropriate.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString.GetIdleTimeWithCapabilities(System.DateTime,System.String)">
            <summary>
            Conmputes an idle time string with optional capabilities info.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString.IsIdleState(Microsoft.Lync.Controls.Internal.Model.PresenceAvailability)">
            <summary>
            Returns true if the user is in an Idle state, false if not.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.IdleTimeToString.EnableFreeBusyOption">
            <summary>
            If true, this converter will show FreeBusy info when idle time is not available.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.IntGreaterThanEqualToVisibility">
            <summary>
            IntGreaterThanEqulToVisibility
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IntGreaterThanEqualToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.IntGreaterThanEqualToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToIcon">
            <summary>
            Convert an integer to a monitor icon
            0  -> Entire Desktop Icon
            1+ -> Single Monitor Icon 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToIcon.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an integer to a Friendly Name
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToIcon.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToIcon.EntireDesktopIcon">
            <summary>
            Entire desktop icon
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToIcon.SingleMonitorIcon">
            <summary>
            Single monitor icon
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NotNullOrEmptyStringToVisibility">
            <summary>
            Convert string value to visibility. If the string is null or empty, return Visible. For watermarks, hints, default text, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NotNullOrEmptyStringToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NotNullOrEmptyStringToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ContactNote">
            <summary>
            ContactNote Class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContactNote.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToBoolean">
            <summary>
            Convert string value to bool. If the string is null or empty, return true.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToBoolean.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToBoolean.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVerticalAlignment">
            <summary>
            Convert string value to vertical. If the string is null or empty, return VerticalAlignment.Center. 
            If the parameter is specified, return the VerticalAlignment.Center.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVerticalAlignment.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVerticalAlignment.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.PresenceAvailabilityToControl">
            <summary>
            PresenceAvailabilityToControl.  Convert a PresenceAvailability to a ContentControl, for example for menu item icons
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.AvailabilityStateToTemplate">
            <summary>
            Convert an AvailabilityState to a ControlTemplate, which will be an availability indicator, either for attaching to Photos or Solitary versions.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.AvailabilityStateToTemplate.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an AvailabilityState to a ControlTemplate
            parameter = Type of Availability ControlTemplate, either for attaching to Photos or Solitary versions. Default is Solitary version.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.AvailabilityStateToTemplate.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.PresenceAvailabilityToControl.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a PresenceAvailability to an Control to be used as an icon in a drop down menu
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.AvailabilityIconAutomationPeer">
            <summary>
            AvailabilityIconAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.AvailabilityIconAutomationPeer.#ctor(Microsoft.Lync.Controls.AvailabilityIcon)">
            <summary>
            AvailabilityIconAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.AvailabilityIconAutomationPeer.GetBoundingRectangleCore">
            <summary>
            Override <c>GetBoundingRectangleCore</c> to return the indicator's position and size
            </summary>
            <returns></returns>
            <remarks>
            In Silverlight, Viewbox does not allow for an automation client to find
            the size of it's underlying contents, so we manually do the computation
            and expose it through the override.
            In WPF, we can rely on FrameworkElement's implementation of <c>GetBoundingRectangleCore</c>
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.ContactCardAutomationPeer">
            <summary>
            ContactCardAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactCardAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactCard)">
            <summary>
            ContactCardAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactCardAutomationPeer.GetHelpTextCore">
            <summary>
            Override GetHelpTextCore.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.OverflowMenuAutomationPeer">
            <summary>
            StartAudioConversationAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.OverflowMenuAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.OverflowMenu)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardAutomationPeer">
            <summary>
            PopupContactCardAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.PopupContactCard)">
            <summary>
            PopupContactCardAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardHostAutomationPeer">
            <summary>
            PopupContactCardHostAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardHostAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.PopupContactCardHost)">
            <summary>
            PopupContactCardHostAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardHostAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the UIElement that is associated with this UIElementAutomationPeer.
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.PopupContactCardHostAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
            <summary>
            Opens the associated PopupContactCard if it exists.
            </summary>
            <remarks>
            This API supports the .NET Framework infrastructure and is not 
            intended to be used directly from your code.
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.ContactListAutomationPeer">
            <summary>
            ContactListAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactListAutomationPeer.#ctor(Microsoft.Lync.Controls.ContactList)">
            <summary>
            ContactListAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.ContactListAutomationPeer.GetHelpTextCore">
            <summary>
            Override GetHelpTextCore.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer">
            <summary>
            PresenceIndicatorAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.#ctor(Microsoft.Lync.Controls.PresenceIndicator)">
            <summary>
            PresenceIndicatorAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.GetHelpTextCore">
            <summary>
            Override GetHelpTextCore.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.GetBoundingRectangleCore">
            <summary>
            Override <c>GetBoundingRectangleCore</c> to return the indicator's position and size
            </summary>
            <returns></returns>
            <remarks>
            In Silverlight, Viewbox does not allow for an automation client to find
            the size of it's underlying contents, so we manually do the computation
            and expose it through the override.
            In WPF, we can rely on FrameworkElement's implementation of <c>GetBoundingRectangleCore</c>
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.StartAudioCallButtonAutomationPeer">
            <summary>
            StartAudioCallButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.StartAudioCallButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.StartAudioCallButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.AutomationPeers.StartInstantMessagingButtonAutomationPeer">
            <summary>
            StartInstantMessagingButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AutomationPeers.StartInstantMessagingButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.StartInstantMessagingButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ControlHelpers">
            <summary>
            Control Helpers
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ControlHelpers.CastTemplatePart``1(System.Windows.Controls.Control,System.String,System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Cast a Template Part to type <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="partName"></param>
            <param name="obj"></param>
            <param name="isPartRequired"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.AvailabilityIcon">
            <summary>
            Reserved for internal use.  (See <see cref="T:Microsoft.Lync.Controls.PresenceIndicator"/>).
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon._suspendStateChanges">
            <summary>
            True if visual state changes are suspended; false otherwise.
            </summary>
            <remarks>
            Initialized to true so that we don't apply VSM changes unnecessarily, 
            when the control is not ready
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon._partViewbox">
            <summary>
            Ref to the control PARTs
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon._availabilityToDisplayedAvailability">
            <summary>
            Map ContactAvailability, the aggregated, detailed availability type, 
            to DisplayedAvailabilityState, the filtered list of different 
            availability types that can be shown
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon.AvailabilityStateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.AvailabilityIcon.AvailabilityState"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon.PhotoDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.AvailabilityIcon.PhotoDisplayMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIcon.IsBlockedProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.AvailabilityIcon.IsBlocked"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.#ctor">
            <summary>
            Constructs an instance of the AvailabilityIcon class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.OnContactPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the button.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.UpdateVisualState(System.Boolean)">
            <summary>
            Update the current visual state of the button.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.ConvertPresenceToContactAvailability(Microsoft.Lync.Controls.Internal.Model.PresenceAvailability)">
            <summary>
            Map the DVM's <c>PresenceAvailability</c> to the View's <c>ContactAvailability</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.ConvertContactAvailabilityToDisplayedAvailabilityState(Microsoft.Lync.Controls.ContactAvailability)">
            <summary>
            
            </summary>
            <param name="contactAvailability"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.AvailabilityIcon.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>AvailabilityIcon</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.AvailabilityIcon.AvailabilityState">
            <summary>
            Gets the user's current aggregated availability.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.AvailabilityIcon.PhotoDisplayMode">
            <summary>
            Get or sets a value which determines if a presence photo will be shown, and if so, in what size. 
            Supporting 32x32px, 48x48px, Hidden.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.AvailabilityIcon.IsBlocked">
            <summary>
            Gets a boolean value which indicates whether or not this contact's access level is set to 'blocked'.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactCard">
            <summary>
            The ContactCard control shows basic or detailed contact and organization information for contacts.
            </summary>
            <remarks>
            This control displays a contact card for a person or distribution group, specified by the
            <see name="Source"/> property.  The card can optionally be <see cref="P:Microsoft.Lync.Controls.ContactCard.IsExpanded">expanded</see>,
            to reveal a set of <see cref="P:Microsoft.Lync.Controls.ContactCard.SelectedTabIndex">tabs</see> which show detailed information about the contact. 
            This control displays presence and availability of colleagues, and gives users the ability to start 
            instant message sessions, voice calls, file transfers, application sharing sessions, or conference calls.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactCard.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactCard.SelectedTabIndexProperty">
            <summary>
            Identifies the SelectedTabIndex dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactCard.ExpanderVisibilityProperty">
            <summary>
            Identifies the ExpanderVisibility dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactCard.DetailsHeightProperty">
            <summary>
            Dependency property backing the DetailsHeight property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactCard.NoteHeightProperty">
            <summary>
            Dependency property backing the NoteHeight property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactCard.#ctor">
            <summary>
            Initializes a new instance of the <c>ContactCard</c> class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactCard.OnApplyTemplate">
            <summary>
            Overrides the OnApplyTemplate method to build the visual tree for the expander control when a new 
            template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactCard.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactCard.OnCreateAutomationPeer">
            <summary>
            Overrides the OnCreateAutomationPeer method to return the ContactCardAutomationPeer object.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.IsExpanded">
            <summary>
            Get or sets whether the details section of the contact card is collapsed or expanded.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.SelectedTabIndex">
            <summary>
            Gets or sets the index of the tab item to display when the contact card is expanded.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.ExpanderVisibility">
            <summary>
            Gets the <c>Visibility</c> state of the expander button.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.ExpanderButton">
            <summary>
            Internal implementation proeprty to control <c>IsExpanded</c> property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.NoteHeight">
            <summary>
            The Height of the Note, or 0 if there is no Note
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactCard.DetailsHeight">
            <summary>
            The Height of the Details area, or 0 if there is no Details area
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactList">
            <summary>
            Use the ContactList control to display the Lync contacts list, 
            and give users the ability to launch voice, instant messaging (IM), or e-mail conversations 
            with any of their contacts.
            </summary>
            <remarks>
            The control supports Group, Relationship, and Status views, in the same manner as 
            Lync, and includes the option to switch between status 
            only, and status with photo display modes. The ContactList control gives users 
            the ability to copy, move, delete, multi-select and sort contacts, set status 
            alerts, and manage privacy settings.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList._sortCriteria">
            <summary>
            Initializes a Dictionary object containing sorting criteria.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList._showFrequentContactsFilter">
            <summary>
            Removes the "Most Used Contacts" group from the contact list.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList._sortableContactsAndGroupsManager">
            <summary>
            Declares a <c>ISortableContactsAndGroupManager</c> contacts and groups manager.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList._groups">
            <summary>
            Declares a native source of Groups.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ContactsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.Contacts"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.GroupViewBySettingProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.GroupViewBySetting"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.SortBySettingProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.SortBySetting"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ShowPivotBarProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ShowPivotBar"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ShowFrequentContactsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ShowFrequentContacts"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ShowFriendlyName"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ContextualInformationProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ContextualInformation"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.Model"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.PersonItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.PersonItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.GroupItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.GroupItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.TelephoneItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.TelephoneItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.BotItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.BotItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.PersonTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.PersonTwoLineItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.GroupTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.GroupTwoLineItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.TelephoneTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.TelephoneTwoLineItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.BotTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.BotTwoLineItemTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.GroupItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.GroupItemContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactList.ItemContainerStyleProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactList.ItemContainerStyle"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.#ctor">
            <summary>
            Initializes a new instance of the ContactList class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.UnwireUCClient">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnContactManagerPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel,Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnIsInResiliencyModePropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnUnloaded">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Attaches groups to the <c>ContactList</c> control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Detaches groups from the <c>ContactList</c> control.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.SortContacts">
            <summary>
            Sorts contacts based on the current <c>SortBySetting</c> property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.AttachContacts">
            <summary>
            Attaches the <c>Contacts</c> property to the data source, 
            and generates Groups and Contacts providers.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.DetachContacts">
            <summary>
            Removes references to any ISortableContactsAndGroupsManager objects and clears the Contacts
            property, which empties the ContactList control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.ClearAndDisable">
            <summary>
            Makes the control unavailable if a connection to Lync is not available.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.AttachAndEnable">
            <summary>
            Attaches contacts and enables the ContactList control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnModelChanged(Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel,Microsoft.Lync.Controls.Internal.Model.IContactsAndGroupsManagerModel)">
            <summary>
            Handles updates to the IContactsAndGroupsManagerModel object.
            </summary>
            <param name="oldModel"></param>
            <param name="newModel"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.HandleSortBySettingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Sets the proper sorting criteria when the <c>SortBySetting</c> property changes.
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.HandleViewBySettingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Changes the source of groups based on the new value of
            the <c>BySettingProperty</c> property.
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactList.OnCreateAutomationPeer">
            <summary>
            Overrides OnCreateAutomationPeer to return the ContactListAutomationPeer object.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Microsoft.Lync.Controls.ContactList.SelectedContactUrisChanged">
            <summary>
            Fired when the content of <see cref="P:Microsoft.Lync.Controls.ContactList.SelectedContactUris"/> has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.PersonItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.GroupItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.TelephoneItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.BotItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.PersonTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.GroupTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.TelephoneTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.BotTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.GroupItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> which is applied to top-level group nodes in the contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ItemContainerStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Style"/> which is applied to contact nodes in the contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.Contacts">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ContactLayoutView">
            <summary>
            Gets or sets the current layout view for all contact nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.SortBySetting">
            <summary>
            Gets or sets an enumerated value which determines the sort order of contacts within the group nodes on the contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.GroupViewBySetting">
            <summary>
            Gets or sets an enumerated value which determines the manner in which contacts are grouped on the contact list.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ShowPivotBar">
            <summary>
            Gets or sets whether the pivot bar is visible.
            </summary>
            <remarks>
            The pivot bar is the part of the <c>ContactList</c> template which displays links for changing
            the <see cref="P:Microsoft.Lync.Controls.ContactList.GroupViewBySetting"/>, as well as a menu button for changing other display properties and preferences.
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ShowFrequentContacts">
            <summary>
            Gets or sets whether the Frequent Contacts Group is shown when <see cref="P:Microsoft.Lync.Controls.ContactList.GroupViewBySetting"/> 
            is set to <see cref="F:Microsoft.Lync.Controls.GroupByOption.Groups"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ShowFriendlyName">
            <summary>
            Gets or sets whether contacts in the list are shown using their <c>display names</c> or their <c>SIP URI's</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.SelectedContactUris">
            <summary>
            Gets a collection of strings which represent the set of contacts that are currently selected in the <c>ContactList</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ContextualInformation">
            <summary>
            Gets or sets data structure which provides contextual information for use with the contextual conversation feature.
            </summary>
            <remarks>
            Contextual information is provided to the destination user when a conversation is initiated.
            This information may include a link or subject line which provides background on the purpose of a conversation.
            Optionally, context may be delivered in the form of an application reference and embedded application data.
            For more information, please refer to the related conceptual topics in the Lync SDK documentation.
            </remarks> 
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.TreeView">
            <summary>
            This is the TreeView PART that is contained in this control
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.SelectedItem">
            <summary>
            Gets the currently selected model
            This will either be an <see cref="T:Microsoft.Lync.Controls.Internal.Model.IContactModel"/> or a <see cref="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup"/>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactList.ScrollToItemOnAdd">
            <summary>
            URI of a contact which should be selected and visible after a move operation.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ConversationContextualInfo">
            <summary>
            A data structure which defines the contextual information that 
            can be used to personalize and customize a conversation that is initiated by a Lync control.
            </summary>
            <remarks>
            Conversation context provides a mechanism for control developers to attach information such as 
            a link, subject line, or embedded application reference to their conversation invitation.
            This context is used to personalize the conversation experience, and provide richer metadata for 
            collaboration. 
            </remarks>
        </member>
        <member name="P:Microsoft.Lync.Controls.ConversationContextualInfo.ApplicationId">
            <summary>
            Gets or sets a string which represents the GUID of an external application which
            will be used to communicate context for this conversation.
            For more information, please refer to the conceptual topics in the Lync SDK documentation.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ConversationContextualInfo.ApplicationData">
            <summary>
            Gets or sets a string which represents the initial data structure to be shared with the
            application specified by <see cref="P:Microsoft.Lync.Controls.ConversationContextualInfo.ApplicationId"/> when the conversation is initialized.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ConversationContextualInfo.ContextualLink">
            <summary>
            Gets or sets a simple hyperlink which is used to convey the context of this conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ConversationContextualInfo.Subject">
            <summary>
            Gets or sets a subject which is used to convey the context of this conversation.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ConversationContextualInfo.ParentWindowHandle">
            <summary>
            A pointer to a parent window to use to dock this conversation
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.ContactsListNodeToContacts">
            <summary>
            Convert <c>String</c> to <c>String</c> with no newline characters
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ContactsListNodeToContacts.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Gets the children contact for a Contacts List node
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ContactsListNodeToContacts.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.ContactTypeToPhotoIconStyle">
            <summary>
            StreamToImageSource
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ContactTypeToPhotoIconStyle.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ContactTypeToPhotoIconStyle.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.ControlsEnumToString">
            <summary>
            Convert an CollaborationEndpointModel to a Image Uri
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToString">
            <summary>
            Enum To integer
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.EnumToString.ResourceManager">
            <summary>
            The Resource Manager
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.EnumToString.IsAcceleratorContext">
            <summary>
            Is the converter being used in an Accelerator Key context
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.Converters.ControlsEnumToString.ResourceManager">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.ConversationContextToContextModel">
            <summary>
            ConversationContextToContextModel
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ConversationContextToContextModel.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ConversationContextToContextModel.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ConversationContextToContextModel.Convert(Microsoft.Lync.Controls.ConversationContextualInfo)">
            <summary>
            Convert <c>ConversationContextualInfo</c> to <c>ConversationContextModel</c>.
            If parameter is <c>null</c> default <c>ConversationContextModel</c> is returned.
            </summary>
            <param name="convContextualInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.ConversationContextToContextModel.Convert(Microsoft.Lync.Controls.ConversationContextualInfo,System.Nullable{System.Int32})">
            <summary>
            Convert <c>ConversationContextualInfo</c> to <c>ConversationContextModel</c>.
            If parameter is <c>null</c> default <c>ConversationContextModel</c> is returned.
            </summary>
            <param name="convContextualInfo"></param>
            <param name="monitorToShare"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartEmailTooltip">
            <summary>
            Convert an EmailModel to an EmailTooltip
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartEmailTooltip.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an AvailabilityState to an Opacity (for a user photo)
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartEmailTooltip.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartInstantMessagingConversationTooltip">
            <summary>
            Convert an EmailAddress to a StartInstantMessagingConversation control Tooltip
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartInstantMessagingConversationTooltip.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an AvailabilityState to an Opacity (for a user photo)
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EmailAddressToStartInstantMessagingConversationTooltip.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToControl">
            <summary>
            Convert an CollaborationEndpointModel to a Control instance with the appropriate ControlTemplate
            Alternately, Convert an IContactModel or IGroupModel to an Image instance representing the DefaultEndpoint
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToControl.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an CollaborationEndpointModel to a Image instance
            Alternately, Convert an IContactModel or IGroupModel to an Image instance representing the DefaultEndpoint
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToControl.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToStartAudioConversationToolTip">
            <summary>
            Convert an IContactModel to a StartAudioConverastion RightButton tooltip
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToStartAudioConversationToolTip.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EndpointTypeToStartAudioConversationToolTip.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumberableContainsGreaterThanEqualToVisibility">
            <summary>
            Convert value to visibility
            ( IEnumerable.Count Greater or Equal N ) == Visible
            ( IEnumerable.Count Less N ) == Collapsed
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumberableContainsLessThanToVisibility">
            <summary>
            Convert value to visibility
            ( IEnumerable.Count Less N ) == Visible
            ( IEnumerable.Count Greater or Equal N ) == Collapsed
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumberableContainsLessThanToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumberableContainsLessThanToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumberableContainsGreaterThanEqualToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToBool">
            <summary>
            Convert Bool to Enum by comparing 'value' and 'parameter'
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToBool.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an Enum to a boolean value
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>
            True - if the Enum value and parameter value are equal.
            False - if the Enum value and parameter value are not equal.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToBool.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert the parameter value back to an Enum.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>
            Returns the Enum value associated with the parameter if the value parameter is 'true'.
            Return 'null' if the value parameter is 'false'.
            </returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToNotVisible">
            <summary>
            Convert Bool to Visibility by comparing 'value' and 'parameter'
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToNotVisible.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an Enum to a boolean value
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>
            Visible - if the Enum value and parameter value are not equal.
            Collapsed - if the Enum value and parameter value are equal.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToNotVisible.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToVisibility">
            <summary>
            Convert Bool to Visibility by comparing 'value' and 'parameter'
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an Enum to a boolean value
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>
            Visible - if the Enum value and parameter value are equal.
            Collapsed - if the Enum value and parameter value are not equal.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert back.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToVisibility.ConvertEnumToVisibility(System.Object,System.Object,System.Boolean)">
            <summary>
            Returns <see cref="F:System.Windows.Visibility.Visible"/> if the argument <param name="value"/>
            matches the <param name="parameter"/>
            If <param name="invertResult"/> is true, we return <see cref="F:System.Windows.Visibility.Visible"/>
            if when there is <b>not</b> a match.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToName">
            <summary>
            Convert an integer to a friendly monitor name
            0 -> Entire Desktop
            1 -> Main Monitor 
            2 -> Second Monitor
            3 -> Third Monitor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToName.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an integer to a Friendly Name
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.MonitorNumberToName.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NotVisibility">
            <summary>
            Inverts <c>Visibility</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NotVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NotVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NullObjectToVisibility">
            <summary>
            Convert any object to visibility.collapsed if it is null. Not for uses with String, which needs NullOrEmptyStringToVisibility.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullObjectToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullObjectToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVisibility">
            <summary>
            Convert string value to visibility. If the string is null or empty, return Collapsed.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NullOrEmptyStringToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.PhoneNumberToCallToolTip">
            <summary>
            Convert an phone number to a ContactCard details tab tooltip
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.PhoneNumberToCallToolTip.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.PhoneNumberToCallToolTip.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.SearchErrorToLabel">
            <summary>
            Convert a SearchError to a string.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SearchErrorToLabel.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an SearchError to a text label.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.SearchResultsToLabel">
            <summary>
            Convert a SearchResultsModel to a string.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SearchResultsToLabel.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert an SearchResultsModel to a text label.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SearchResultsToLabel.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.SortedCollaborationEndpointConverter">
            <summary>
            This class provides a data binding converter for an enumeration of <see cref="T:Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel"/> objects.
            The converter exists for the sole purpose of sorting the contents of the enumeration before it is displayed.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SortedCollaborationEndpointConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Sorts the values in the given collection.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SortedCollaborationEndpointConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns the enumeration, unchanged.
            Backward conversion is not supported by this converter.  (ie:  "sorting" works, "unsorting" does not)
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.SortedCollaborationEndpointConverter.CollaborationEndpointTypeComparator">
            <summary>
            This <see cref="T:System.Collections.Generic.IComparer`1"/> implementation sorts instances of <see cref="T:Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel"/> based 
            on the <see cref="P:Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel.Type"/> property.
            This sort is currently based on the integral value of the 
            enumeration data type, <see cref="T:Microsoft.Lync.Controls.Internal.Model.ContactEndpointType"/>.
            This sorting satisfies the functional specification requirement for sorting of endpoints (such as "Work" and "Home")
            in the controls such as <see cref="T:Microsoft.Lync.Controls.StartAudioCallButton"/>.  
            If the <see cref="T:Microsoft.Lync.Controls.Internal.Model.ContactEndpointType"/> enumeration is modified in such a way that the order of 
            the enumeration no longer correlates to the required display order, this comparison algorithm can easily be
            modified to satisfy the new requirement.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.SortedCollaborationEndpointConverter.CollaborationEndpointTypeComparator.Compare(Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel,Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel)">
            <summary>
            Compares the specified <see cref="T:Microsoft.Lync.Controls.Internal.Model.ICollaborationEndpointModel"/> instances.
            </summary>
            <returns>0 if equal, 1 if the first object is greater, and -1 if the first object is lesser.</returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.StringToAccelerator">
            <summary>
            Convert a string to a Accelerator string
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StringToAccelerator.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert a string to the appropriate accelerator string.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StringToAccelerator.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter.ConvertBack: not implemented
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.StringToSingleLineString">
            <summary>
            Convert <c>String</c> to <c>String</c> with no newline characters
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Converters.StringToSingleLineString._newLines">
            <summary>
            A list of all strings that WPF or SL displays as newlines
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StringToSingleLineString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert <c>CalendarStateModel</c> to <c>String</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StringToSingleLineString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.CustomContactList">
            <summary>
            Use the CustomContactsList control to provide an arbitrary and non-hierarchical 
            display of contacts and groups for specific contexts. 
            </summary>
            <remarks>CustomContactsList is a subclass of ListBox which is optimized for use 
            in the display of contact information. The CustomContactsList control can be used 
            to specify a user-specified collection of contacts. Contacts are displayed using a 
            UI template matching that which is used on the ContactList control. Unlike 
            ContactList, this control permits the user to programmatically specify a list of 
            contacts to display, and modify the display settings.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList._logger">
            <summary>
            Debug logger
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList.PersonTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.CustomContactList.PersonTwoLineItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList.GroupTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.CustomContactList.GroupTwoLineItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList.TelephoneTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.CustomContactList.TelephoneTwoLineItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactList.BotTwoLineItemTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.CustomContactList.BotTwoLineItemTemplate"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.#ctor">
            <summary>
            Initializes a new instance of the CustomContactList class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Overrides the IsItemItsOwnContainerOverride method to return a 
            bool indicating whether the type is a CustomContactListItem.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.GetContainerForItemOverride">
            <summary>
            Overrides the GetContainerForItemOverride method to create a 
            <c>CustomContactListItem</c> container and apply a DataTemplate,
            if there is an explicit one. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Overrides the PrepareContainerForItemOverride method to 
            prepare the CustomContactListItem for display.
            </summary>
            <param name="element"></param>
            <param name="item"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Overrides the ClearContainerForItemOverride method to 
            remove bindings added by the <c>PrepareContainerForItemOverride</c> method.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.HandleSelectedIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Writes the value of the SelectedIndexProperty to the logger.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.HandleSelectedItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Writes the value of the SelectedItemProperty to the logger.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactList.HandleContactLayoutViewPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Writes the value of the ContactLayoutView property to the logger.
            </summary>
            <param name="obj"></param>
            <param name="e"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactList.PersonTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactList.GroupTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactList.TelephoneTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactList.BotTwoLineItemTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactList.ContactLayoutView">
            <summary>
            Gets or sets an enumerated value which determines whether this contact item is displayed
            in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> or <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.CustomContactListItem">
            <summary>
            Use the CustomContactListItem control with the CustomContactsList control 
            to show basic or detailed contact and organization information for contacts.
            </summary>
            <remarks>CustomContactListItem is a child control, created for use with the CustomContactsList control. 
            CustomContactListItem supports a <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property, similar to that used by other 
            Microsoft Lync SDK objects which operate on a single contact. CustomContactListItem 
            also supports a ContentPropertyAttribute attribute which permits the Source 
            property to be specified in XAML as a child element.</remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactListItem.PersonTwoLineContentTemplateProperty">
            <summary>
            Identifies the PersonTwoLineContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactListItem.GroupTwoLineContentTemplateProperty">
            <summary>
            Identifies the GroupTwoLineContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactListItem.TelephoneTwoLineContentTemplateProperty">
            <summary>
            Identifies the TelephoneTwoLineContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactListItem.BotTwoLineContentTemplateProperty">
            <summary>
            Identifies the BotTwoLineContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutViewProperty">
            <summary>
            Identifies the ContactLayoutView dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.CustomContactListItem.#ctor">
            <summary>
            Initializes a new instance of the CustomContactListItem class.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutView">
            <summary>
            Gets or sets an enumerated value which determines whether this contact item is displayed
            in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> or <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactListItem.PersonTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactListItem.GroupTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactListItem.TelephoneTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.CustomContactListItem.BotTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.CustomContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.MenuContext">
            <summary>
            Specifies the context in which a context menu is being used.
            </summary>
            <remarks>
            Specifies the context in which a context menu is being used.
            See <see cref="T:Microsoft.Lync.Controls.ContactList"/>, <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/>, or <see cref="F:Microsoft.Lync.Controls.MenuContext.CustomContactList"/>.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.MenuContext.ContactListByGroup">
            <summary>
            Specifies the menu context of a ContactsList in group-by-group mode
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MenuContext.ContactListByStatus">
            <summary>
            Specifies the menu context of a ContactsList in group-by-status mode
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MenuContext.ContactListByRelationship">
            <summary>
            Specifies the menu context of a ContactsList in group-by-relationship mode
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MenuContext.CustomContactList">
            <summary>
            Specifies the menu context of a CustomContactList
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.MenuContext.SearchResult">
            <summary>
            Specifies the menu context of a ContactSearchResultList list
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.PresenceHoverActions">
            <summary>
            Represents the actions that can be taken when a user hovers over the availability icon
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceHoverActions.ShowContactBrief">
            <summary>
            Show the brief representation of a contact, which
            includes basic information and the actions bar
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceHoverActions.ShowContactDetails">
            <summary>
            Show the detailed representation of a contact, which
            includes the brief representation as well as further details
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceHoverActions.None">
            <summary>
            Take no action while hovering over the availability icon
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.PresenceClickActions">
            <summary>
            Represents the actions that can be taken when a user single-clicks on the availability icon
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceClickActions.ShowContactBrief">
            <summary>
            Show the brief representation of a contact, which
            includes basic information and the actions bar
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceClickActions.ShowContactDetails">
            <summary>
            Show the detailed representation of a contact, which
            includes the brief representation as well as further details
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceClickActions.None">
            <summary>
            Take no action after single clicking on the availability icon
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactAvailability">
            <summary>
            Contact Availability.  Enumerates the possible states for a contact's aggregated availability.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.Free">
            <summary>
            Free
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.FreeIdle">
            <summary>
            FreeIdle
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.Busy">
            <summary>
            Busy
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.BusyIdle">
            <summary>
            BusyIdle
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.DoNotDisturb">
            <summary>
            DoNotDisturb
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.TemporarilyAway">
            <summary>
            TemporarilyAway
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.Away">
            <summary>
            Away
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactAvailability.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactLayoutOption">
            <summary>
            Possible layout views for <see cref="T:Microsoft.Lync.Controls.ContactList"/> and <see cref="T:Microsoft.Lync.Controls.CustomContactList"/> controls.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine">
            <summary>
            One line layout
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines">
            <summary>
            Two lines layout
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.GroupByOption">
            <summary>
            Grouping options for the <see cref="T:Microsoft.Lync.Controls.ContactList"/> control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.GroupByOption.Groups">
            <summary>
            Specifies that the list should be grouped by user groups.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.GroupByOption.Relationship">
            <summary>
            Specifies that the list should be grouped by relationship.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.GroupByOption.Status">
            <summary>
            Specifies that the list should be grouped by status.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SortByOption">
            <summary>
            Sort options for the <see cref="T:Microsoft.Lync.Controls.ContactList"/> control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SortByOption.Availability">
            <summary>
            Specifies that items within each group should be sorted by availability.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SortByOption.DisplayName">
            <summary>
            Specifies that items within each group should be sorted by display name.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SearchType">
            <summary>
            Specifies the desired type of search to perform.
            </summary>
            <remarks>
            The search control can find contacts by name or by skill.
            See <see cref="T:Microsoft.Lync.Controls.ContactSearch"/>, <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/>, and <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/>
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchType.Skill">
            <summary>
            Specifies that the search is by skill.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchType.Name">
            <summary>
            Specifies that the search is by name.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SearchState">
            <summary>
            Enumerates the current state of the search operation.
            </summary>
            <remarks>
            The search control reports its current state using these enumerated values.
            See <see cref="T:Microsoft.Lync.Controls.ContactSearch"/>, <see cref="T:Microsoft.Lync.Controls.ContactSearchResultList"/>, and <see cref="T:Microsoft.Lync.Controls.ContactSearchInputBox"/>
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchState.Cleared">
            <summary>
            Cleared
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchState.Searching">
            <summary>
            Searching
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchState.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchState.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SearchError">
            <summary>
            Enumerated values which indicate the possible reasons for a search failure. See <see cref="T:Microsoft.Lync.Controls.ContactSearch"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.None">
            <summary>
            No error
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.Unknown">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.Unspecified">
            <summary>
            Unspecified error
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.SharepointNotConfigured">
            <summary>
            Sharepoint not configured
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.AllNoise">
            <summary>
            Query was all noise
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.NoResponse">
            <summary>
            No response was received
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.BadQuery">
            <summary>
            Bad query
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.BadScope">
            <summary>
            Bad scope
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.BadRequest">
            <summary>
            Bad request
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.NoQuery">
            <summary>
            No query
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.NoAuthorization">
            <summary>
            No authorization
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SearchError.ServerError">
            <summary>
            Server error
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.PhotoDisplayMode">
            <summary>
            Specifies the display mode of the presence photo for <see cref="T:Microsoft.Lync.Controls.PresenceIndicator"/>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PhotoDisplayMode.Hidden">
            <summary>
            Do not show photo
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PhotoDisplayMode.Small">
            <summary>
            Small photo (32x32px)
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PhotoDisplayMode.Large">
            <summary>
            Large Photo (48x48px)
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.LyncControlInitializationError">
            <summary>
            Enumerates the error that a Lync Control experienced in Initialization.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.LyncControlInitializationError.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.LyncControlInitializationError.LyncRunningUnderSuppression">
            <summary>
            Lync is running under UISupression mode.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.LyncControlInitializationError.LyncIsNotRunning">
            <summary>
            Lync is not running.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.LyncControlInitializationError.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.PopupPlacementMode">
            <summary>
            Reserved for internal use.
            Specifies the relative position in which to display a popup contact card.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PopupPlacementMode.Top">
            <summary>
            By default, put the card above the Placement target and align their left edges.  
            If there is no room above, move it below
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PopupPlacementMode.Left">
            <summary>
            By default, put the card to the left of the Placement target and align their bottom edges.  
            If there is no room left, move it right
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PopupPlacementMode.LeftAndVerticallyCentered">
            <summary>
            By default, put the card to the left of the Placement target and align the middle of the card 
            and the <c>PlacementTarget</c>. 
            If there is no room left, move it right
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SyncState">
            <summary>
            Enumerated values which identify the synchronization state of the search provider.  See <see cref="T:Microsoft.Lync.Controls.ContactSearch"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SyncState.NotStarted">
            <summary>
            Not started.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SyncState.InProgress">
            <summary>
            In progress.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SyncState.Succeeded">
            <summary>
            Succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.SyncState.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.DisplayedAvailabilityState">
            <summary>
            Possible displayed states for a contact's Availability
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.Away">
            <summary>
            Away
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.Busy">
            <summary>
            Busy
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.DisplayedAvailabilityState.DoNotDisturb">
            <summary>
            DoNotDisturb
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.AvailabilityIconAppearance">
            <summary>
            Possible appearance types of a presence icon.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIconAppearance.Photo">
            <summary>
            For attachment to a Contact photo
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.AvailabilityIconAppearance.Solitary">
            <summary>
            Standard standalone version not attached to a photo
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers">
            <summary>
            FrameworkElement Helpers
            </summary>
            <summary>
            Framework Element Helpers for WPF.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.FindParent``1(System.Windows.FrameworkElement)">
            <summary>
            FindParent with a specified type
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.GetOldestParent``1(System.Windows.DependencyObject)">
            <summary>
            Returns the oldest <c>T</c>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dependencyObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.TryFindResourceUp``1(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Search for specific resource in this Framework element and its parents.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="root"></param>
            <param name="resourceKey"></param>
            <returns>The target resource if found, null in any other case</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.TryGetChildPartFromVisualTree``1(System.Windows.FrameworkElement,System.String)">
            <summary>
            Navigate the visual tree of passed <c>FrameworkElement</c>
            looking for a child <c>FrameworkElement</c> of type <c>T</c>
            and with a <c>Name</c> <c>partName</c>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parent"></param>
            <param name="partName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.TryGetChildWithAutomationIdFromVisualTree``1(System.Windows.FrameworkElement,System.String)">
            <summary>
            Search <c>Parent"</c>'s visual tree for a <c>FrameworkElement</c> of type <typeparamref name="T"/>
            with an automation id of <paramref name="automationId"/>
            </summary>
            <typeparam name="T">The Type of FrameworkElements to check</typeparam>
            <param name="parent">The Parent node in the tree to search</param>
            <param name="automationId">The Automation id to search for</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.TryGetChildFromVisualTree``1(System.Windows.FrameworkElement,System.Func{System.Windows.FrameworkElement,System.Boolean})">
            <summary>
            Try to get <c>T</c> from the visual tree, using <paramref name="evaluateChild"/>
            to decide whether that child of type <typeparamref name="T"/> should be returned
            </summary>
            <typeparam name="T">The Type of FrameworkElements to check</typeparam>
            <param name="parent">The Parent node in the tree to search</param>
            <param name="evaluateChild">A delegate used to find the Child</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.TryGetParentFromVisualTree``1(System.Windows.FrameworkElement)">
            <summary>
            A helper method that goes over the Visual Tree and tries to find a parent element
            </summary>
            <typeparam name="T"></typeparam>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.ForEachVisualChild(System.Windows.DependencyObject,System.Action{System.Windows.DependencyObject})">
            <summary>
            Iterate for each element in the Visual Tree
            </summary>
            <param name="dependencyObj"></param>
            <param name="childAction"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.GetAncestorValue``1(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Gets the first Value for an Attached Property traveling up VisualTree
            </summary>
            <param name="reference"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.IsParentPopup(System.Windows.DependencyObject)">
            <summary>
            Is the Parent a Popup
            </summary>
            <param name="dependencyObject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.BindToControlDependencyProperty(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.DependencyProperty)">
            <summary>
            Helper method to bind to a control dependency property
            </summary>
            <param name="targetControl"></param>
            <param name="sourceControl"></param>
            <param name="sourceDependencyPropertyName">Do not include 'Property' postfix</param>
            <param name="targetDependencyProperty"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.BindToControlDependencyProperty(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.Data.BindingMode,System.Windows.DependencyProperty)">
            <summary>
            Helper method to bind to a control dependency property
            </summary>
            <param name="targetControl"></param>
            <param name="sourceControl"></param>
            <param name="sourceDependencyPropertyName">Do not include 'Property' postfix</param>
            <param name="bindingMode"></param>
            <param name="targetDependencyProperty"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.BindToProperty(System.Windows.FrameworkElement,System.Object,System.String,System.Windows.DependencyProperty)">
            <summary>
            Helper method to bind a control dependency property to an Object that 
            implements <c>INotifyPropertyChanged</c> 
            </summary>
            <param name="targetControl"></param>
            <param name="sourceObject"></param>
            <param name="sourcePropertyPath"></param>
            <param name="targetDependencyProperty"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.IsParentOf(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            Check whether <paramref name="child"/> lives below the target control in the tree
            </summary>
            <param name="targetControl"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FrameworkElementHelpers.IsInVisualTree(System.Windows.Media.Visual)">
            <summary>
            Is the <paramref name="visual"/> rooted in a connected visual tree.
            </summary>
            <param name="visual"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.AddContactAutomationPeer">
            <summary>
            AddContactAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.AddContactAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.AddContact)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.ControlColors">
            <summary>
            Reserved for internal use.
            Defines a set of standard <see cref="T:System.Windows.Media.Brush"/> colors which are used by
            Lync Control templates to emulate the look and feel of Microsoft Lync.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ControlColors.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.DefaultControlBackgroundBrush">
            <summary>
            DefaultControlBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardBackgroundBrush">
            <summary>
            ContactCardBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardBorderBrush">
            <summary>
            ContactCardBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardBorderBrushLight">
            <summary>
            ContactCardBorderBrushLight
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardBubbleBackgroundBrush">
            <summary>
            ContactCardBubbleBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardDetailsDividerBorderBrush">
            <summary>
            ContactCardDetailsDividerBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardDetailsTabBackgroundBrush">
            <summary>
            ContactCardDetailsTabBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardSuperiorIndicatorBrush">
            <summary>
            ContactCardSuperiorIndicatorBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactCardSelfIndicatorBrush">
            <summary>
            ContactCardSelfIndicatorBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_Medium">
            <summary>
            GlobalTextColor_Medium
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_MediumDark">
            <summary>
            GlobalTextColor_MediumDark
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_Dark">
            <summary>
            GlobalTextColor_Dark
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_Link">
            <summary>
            GlobalTextColor_Link
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_Black">
            <summary>
            GlobalTextColor_Black
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_GroupName">
            <summary>
            GlobalTextColor_GroupName
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_HoverForegroundBlack">
            <summary>
            GlobalTextColor_HoverForeground
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalTextColor_HoverForegroundMediumDark">
            <summary>
            GlobalTextColor_HoverForegroundMediumDark
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBorderBrush_Secondary_Default">
            <summary>
            GlobalButtonBorderBrush_Secondary_Default
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_Default">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_Default
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBorderBrush_Secondary_Selected">
            <summary>
            GlobalButtonBorderBrush_Secondary_Selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_SelectedA">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_SelectedA
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_SelectedB">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_SelectedB
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBorderBrush_Secondary_Hover">
            <summary>
            GlobalButtonBorderBrush_Secondary_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_HoverA">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_HoverA
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_HoverB">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_HoverB
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBorderBrush_Secondary_Press">
            <summary>
            GlobalButtonBorderBrush_Secondary_Press
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_PressA">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_PressA
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_PressB">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_PressB
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Secondary_PressC">
            <summary>
            GlobalButtonBackgroundBrush_Secondary_PressC
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBorderBrush_Tertiary_Hover">
            <summary>
            GlobalButtonBackgroundBorderBrush_Tertiary_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Tertiary_Hover">
            <summary>
            GlobalButtonBackgroundBrush_Tertiary_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonInternalBorderBrush_Tertiary_Hover">
            <summary>
            GlobalButtonInternalBorderBrush_Tertiary_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBorderBrush_Tertiary_Default">
            <summary>
            GlobalButtonBackgroundBorderBrush_Tertiary_Default
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Tertiary_Pressed">
            <summary>
            GlobalButtonBackgroundBrush_Tertiary_Pressed
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBorderBrush_Tertiary_Pressed">
            <summary>
            GlobalButtonBackgroundBorderBrush_Tertiary_Pressed
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBorderBrush_Tertiary_Selected">
            <summary>
            GlobalButtonBackgroundBorderBrush_Tertiary_Selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBorderBrush_Tertiary_OppositeHover">
            <summary>
            GlobalButtonBackgroundBorderBrush_Tertiary_OppositeHover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalButtonBackgroundBrush_Tertiary_OppositeHover">
            <summary>
            GlobalButtonBackgroundBrush_Tertiary_OppositeHover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.TabItemSelectedBackgroundBrush">
            <summary>
            TabItemSelectedBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.TabItemHoverBackgroundBrush">
            <summary>
            TabItemHoverBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.TabItemSideBorderBrush">
            <summary>
            TabItemSideBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MyNoteBoxBackgroundBrush">
            <summary>
            MyNoteBoxBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MyNoteBoxBorderBrush">
            <summary>
            MyNoteBoxBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuItemHoverBackgroundBrush">
            <summary>
            MenuItemHoverBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuItemHoverBorderBrush">
            <summary>
            MenuItemHoverBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuItemCheckedBackgroundBrush">
            <summary>
            MenuItemCheckedBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuBackgroundBrush">
            <summary>
            MenuBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuItemHeaderBackgroundBrush">
            <summary>
            MenuItemHeaderBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.MenuItemHeaderForegroundBrush">
            <summary>
            MenuItemHeaderForegroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.FilterButtonSelectedBrush">
            <summary>
            FilterButtonSelectedBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.FilterButtonHoverBrush">
            <summary>
            FilterButtonHoverBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.FilterButtonPressedBrush">
            <summary>
            FilterButtonPressedBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ScrollButtonHoverBrush">
            <summary>
            ScrollButtonHoverBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ScrollButtonForegroundBrush">
            <summary>
            ScrollButtonForegroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ScrollButtonBackgroundBrush">
            <summary>
            ScrollButtonBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ScrollButtonContactNoteForegroundBrush">
            <summary>
            ScrollButtonContactNoteForegroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ScrollButtonContactNoteHoverBrush">
            <summary>
            ScrollButtonContactNoteHoverBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactNoteButtonForegroundBrush">
            <summary>
            ContactNoteButtonForegroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactNoteButtonHoverBrush">
            <summary>
            ContactNoteButtonHoverBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactNoteButtonPressedBrush">
            <summary>
            ContactNoteButtonPressedBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactNoteButtonDefaultBrush">
            <summary>
            ContactNoteButtonDefaultBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionBackground_Hover">
            <summary>
            GlobalListSelectionBackground_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionBorder_Hover">
            <summary>
            GlobalListSelectionBorder_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionInnerBorder_Hover">
            <summary>
            GlobalListSelectionInnerBorder_Hover
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionBackground_Selected">
            <summary>
            GlobalListSelectionBackground_Selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionBorder_Selected">
            <summary>
            GlobalListSelectionBorder_Selected
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelection_Focus">
            <summary>
            GlobalListSelection_Focus
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.GlobalListSelectionBackground_Pressed">
            <summary>
            GlobalListSelectionBackground_Pressed
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactNameHoverBrush">
            <summary>
            ContactNameHoverBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchCancelNormalBorderBrush">
            <summary>
            ContactSearchCancelNormalBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchCancelNormalBackgroundBrush">
            <summary>
            ContactSearchCancelNormalBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchCancelHoverBorderBrush">
            <summary>
            ContactSearchCancelHoverBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchCancelHoverBackgroundBrush">
            <summary>
            ContactSearchCancelHoverBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchCancelPressedBorderBrus">
            <summary>
            ContactSearchCancelPressedBorderBrus
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchLeftEdgeNormalBorderBrush">
            <summary>
            ContactSearchLeftEdgeNormalBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchLeftEdgeHoverBorderBrush">
            <summary>
            ContactSearchLeftEdgeHoverBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchBackgroundBrush">
            <summary>
            ContactSearchBackgroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ContactSearchBorderBrush">
            <summary>
            ContactSearchBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ToolTipBorderBrush">
            <summary>
            ToolTipBorderBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ToolTipForegroundBrush">
            <summary>
            ToolTipForegroundBrush
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ControlColors.ToolTipBackgroundBrush">
            <summary>
            ToolTipBackgroundBrush
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ActionsBar">
            <summary>
            ActionsBar Class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ActionsBar.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AddContact">
            <summary>
            AddContact Class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AddContact.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AddContact.OnApplyTemplate">
            <summary>
            OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AddContact.HandleDropDownClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the drop-down menu closes, we propagate the event
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AddContact.HandleDropDownOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When the drop-down menu opens, we propagate the event
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AddContact.OnCreateAutomationPeer">
            <summary>
            OnCreateAutomationPeer override
            </summary>
            <returns></returns>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.AddContact.DropDownOpened">
            <summary>
            Fired when the drop down menu opens
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.AddContact.DropDownClosed">
            <summary>
            Fired when the drop down menu closes
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ContactListItem">
            <summary>
            Reserved for internal use. This control is used to display the contact nodes in a <see cref="T:Microsoft.Lync.Controls.ContactList"/> control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.ModelProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.Model"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.ShowFriendlyNameProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.ShowFriendlyName"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.ContactLayoutViewProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.ContactSeparatorVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactSeparatorVisibility"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.PersonContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.PersonContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.GroupContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.GroupContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.TelephoneContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.TelephoneContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.BotContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.BotContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.PersonTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.PersonTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.GroupTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.GroupTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.TelephoneTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.TelephoneTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.ContactListItem.BotTwoLineContentTemplateProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.ContactListItem.BotTwoLineContentTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.#ctor">
            <summary>
            Constructs an instance of the ContactListItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.HandlePartContactItemOnItemTemplated(System.Object,System.EventArgs)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.OnSourceChanged(System.Object,System.Object)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Override default behavior for double click
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.LaunchDefaultConversation">
            <summary>
            Start default conversation based on current <c>IContactModel</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.ContactListItem.ScrollIntoView">
            <summary>
            If the contact list is in a scrollviewer, attempt to bring this item into view.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.Model">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.ShowFriendlyName">
            <summary>
            Gets or sets a boolean value which determines whether or not this contact item displays
            a friendly name string or a SIP URI.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView">
            <summary>
            Gets or sets an enumerated value which determines whether this contact item is displayed
            in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> or <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.ContactSeparatorVisibility">
            <summary>
            Gets or sets an enumerated value which determines whether or not a separator element is displayed in this control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.PersonContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.GroupContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.TelephoneContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.BotContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.OneLine"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.PersonTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Person-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.GroupTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Group-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.TelephoneTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Telephone-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ContactListItem.BotTwoLineContentTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> used for Bot-type contacts in <see cref="F:Microsoft.Lync.Controls.ContactLayoutOption.TwoLines"/> mode.
            (See <see cref="P:Microsoft.Lync.Controls.ContactListItem.ContactLayoutView"/>).
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton">
            <summary>
            EnterEnabledRadioButton Class
            </summary>
            
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnApplyTemplate">
            <summary>
            Override <c>OnApplyTemplate</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Override <c>OnIsPressedChanged</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Override <c>OnMouseEnter</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Override <c>OnMouseLeave</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Override <c>OnGotFocus</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Override <c>OnLostFocus</c> for custom, mutually exclusive implementation of VisualStates for this class
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.EnterEnabledRadioButton.UpdateVisualState">
            <summary>
            Change visual states of the custom, mutually exclusive implementation of VisualStates based on mouse state, selection and key focus state
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.ResourcesWrapper">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.ResourcesWrapper.Resources">
            <summary>
            Facilitates access to the localized <see cref="P:Microsoft.Lync.Controls.ResourcesWrapper.Resources"/> class in XAML templates.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.SystemsColorsWrapper">
            <summary>
            Reserved for internal use.
            Defines a set of standard <see cref="T:System.Windows.Media.Color"/> values which are used by
            Lync Control templates to emulate the look and feel of Microsoft Lync.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ActiveBorderColor">
            <summary>
            Gets a Color structure that is the color of the active window's border.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ActiveCaptionColor">
            <summary>
            Gets a Color structure that is the background color of the active window's title bar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ActiveCaptionTextColor">
            <summary>
            Gets a Color structure that is the color of the text in the active window's title bar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.AppWorkspaceColor">
            <summary>
            Gets a Color structure that is the color of the application workspace.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlColor">
            <summary>
            Gets a Color structure that is the face color of a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlDarkColor">
            <summary>
            Gets a Color structure that is the shadow color of a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlDarkDarkColor">
            <summary>
            Gets a Color structure that is the dark shadow color of a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlLightColor">
            <summary>
            Gets a Color structure that is the light color of a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlLightLightColor">
            <summary>
            Gets a Color structure that is the highlight color of a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ControlTextColor">
            <summary>
            Gets a Color structure that is the color of text in a three-dimensional display element.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.DesktopColor">
            <summary>
            Gets a Color structure that is the color of the desktop.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.GrayTextColor">
            <summary>
            Gets a Color structure that is the color of disabled text.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.HighlightColor">
            <summary>
            Gets a Color structure that is the background color of selected items.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.HighlightTextColor">
            <summary>
            Gets a Color structure that is the color of the text of selected items.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.InactiveBorderColor">
            <summary>
            Gets a Color structure that is the color of an inactive window's border.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.InactiveCaptionColor">
            <summary>
            Gets a Color structure that is the background color of an inactive window's title bar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.InactiveCaptionTextColor">
            <summary>
            Gets a Color structure that is the color of the text of an inactive window's title bar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.InfoColor">
            <summary>
            Gets a Color structure that is the background color for the ToolTip control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.InfoTextColor">
            <summary>
            Gets a Color structure that is the text color for the ToolTip control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.MenuColor">
            <summary>
            Gets a Color structure that is the color of a menu's background.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.MenuTextColor">
            <summary>
            Gets a Color structure that is the color of a menu's text.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.ScrollBarColor">
            <summary>
            Gets a Color structure that is the background color of a scroll bar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.WindowColor">
            <summary>
            Gets a Color structure that is the background color in the client area of a window.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.WindowFrameColor">
            <summary>
            Gets a Color structure that is the color of a window frame.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.SystemsColorsWrapper.WindowTextColor">
            <summary>
            Gets a Color structure that is the color of the text in the client area of a window.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts">
            <summary>
            This class represents the VideModel used for Frequent Contacts displayed in <c>ContactList</c>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup">
            <summary>
            This class represents the model used for Groupd displayed in <c>ContactsList</c>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup._neverSort">
            <summary>
            Inidicates whether this group should apply an sorting logic
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager,System.Object,System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.String)">
            <summary>
            Default constructor that creates a group of sorted contacts
            </summary>
            <param name="comparison"></param>
            <param name="name"></param>
            <param name="manager"></param>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager,System.Object,System.String)">
            <summary>
            Cosntructor that creates a <c>GroupByGroup</c> object withouth applying any sorting algorithm.
            </summary>
            <param name="manager"></param>
            <param name="id"></param>
            <param name="name"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.AddContact(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Add a contact to this group
            </summary>
            <param name="contact"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.RemoveContact(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Remove a contact from this group
            </summary>
            <param name="contact"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Contains(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Check whether this contact exists in the group 
            </summary>
            <param name="contact"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Sort contacts in the group based on <c>Comparison</c> passed
            </summary>
            <param name="comparison"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Sort">
            <summary>
            Trigger a Sort on my group using internal <c>Comparison</c>  
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.OnPropertyChanged(System.Enum)">
            <summary>
            Raise PropertyChanged
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Dispose(System.Boolean)">
            <summary>
            If we are Presence Aware unsubscribe to presence status changes.
            Also dispose all my groups.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Dispose">
            <summary>
            Unsubscribe all the contacts to <c>PresenceItems.PropertyChanged</c>
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.CollectionChanged">
            <summary>
            Occurs when the content of this collection as changed 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Id">
            <summary>
            Unique identifier for this group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Name">
            <summary>
            The name of this group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Contacts">
            <summary>
            The collection of Contacts in this group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Count">
            <summary>
            The amount of contacts in this group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.CountOnline">
            <summary>
            The number of online contacts. Contacts are considered 
            online if their presence status is available or busy
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.IsDistributionGroup">
            <summary>
            Does this <c>GroupByGroup</c> represent a Distribution Group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.GroupModel">
            <summary>
            Return the <c>IGroupModel</c> that is group is based on.
            Return null if this group is not based on any <c>IGroupModel</c>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.Manager">
            <summary>
            My parent<c>GroupByContactsAndGroupsManagerBase</c>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.InhibitSorting">
            <summary>
            Get or set a bool value which indicates whether or not this collection should be sorted.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts._contacts">
            <summary>
            The mapped list of contacts converter to IContacModel Enumerable
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager,System.Object,System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.String,System.Int32)">
            <summary>
            Default constructor that creates a group of sorted contacts
            </summary>
            <param name="manager"></param>
            <param name="id"></param>
            <param name="comparison"></param>
            <param name="name"></param>
            <param name="maxDisplayedContacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.Refresh">
            <summary>
            Pushes re-creation of <c>Contacts</c> property
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.AddContact(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Override base class to add contact to internal 
            FavoriteContacts or FrequentContacts collections
            </summary>
            <param name="contact"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.RemoveContact(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Override base class to remove contact from internal 
            FavoriteContacts or FrequentContacts collections
            </summary>
            <param name="contact"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Overrride base clase to apply sorting logic to internal
            FavoriteContacts or FrequentContacts collections
            </summary>
            <param name="comparison"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.Dispose(System.Boolean)">
            <summary>
            If we are Presence Aware unsubscribe to presence status changes.
            Also dispose all my groups.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.Contacts">
            <summary>
            The collection of Contacts in this group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.FavoriteContacts">
            <summary>
            Get Pinned Contacts in my <c>Contacts</c> collection
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.InhibitSorting">
            <summary>
            Get or set a bool value which indicates whether or not this collection should be sorted.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupFrequentContacts.LastPinnedContact">
            <summary>
            Represents the last <c>IContactModel</c> item in the list of
            Pinned Contacts
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager">
            <summary>
            This class provides the menu management for the ContactListMenu
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.#ctor">
            <summary>
            Construct the menu manager and define all rules.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ConfigureAllMenus(System.Collections.IList,Microsoft.Lync.Controls.MenuContext,System.Windows.Controls.Control,Microsoft.Lync.Controls.Internal.PopupContactCard)">
            <summary>
            Set the data and context of the menu, and configures the menus based on this information.
            <returns>True if any menu is visible.</returns>
            </summary>
            <param name="selection">The collection of models which the user selected</param>
            <param name="context">The context in which this menu is shown</param>
            <param name="owner">The control to which this menu is bound</param>
            <param name="popup">If a single item was selected, this is the <see cref="T:Microsoft.Lync.Controls.Internal.PopupContactCard"/> of that item.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SetMenuModel(System.Collections.IList)">
            <summary>
            Iterates over the selection and sets up the menu model.
            If no valid models are found in the selection, return false.
            </summary>
            <param name="selection"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GetContextualInformation(System.Windows.Controls.Control)">
            <summary>
            ContextualInformation varies based on the interface of the control...
            </summary>
            <returns>The ConversationContextualInfo of the control which owns the menu </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddRule(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule)">
            <summary>
            Add a rule to the menu manager
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.Contacts">
            <summary>
            Selection context when one or more contacts are selected in any control
            To configure the context, use <see cref="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ConfigureAllMenus(System.Collections.IList,Microsoft.Lync.Controls.MenuContext,System.Windows.Controls.Control,Microsoft.Lync.Controls.Internal.PopupContactCard)"/>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupByGroup">
            <summary>
            Selection context for ContactList when a group header is chosen
            To configure the context, use <see cref="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ConfigureAllMenus(System.Collections.IList,Microsoft.Lync.Controls.MenuContext,System.Windows.Controls.Control,Microsoft.Lync.Controls.Internal.PopupContactCard)"/>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.Selection">
            <summary>
            Raw selection.  May contain GroupByGroup's or IContactModels.
            Other than SendEmail, most commands don't need the raw data, and prefer to
            use the <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.Contacts"/> or <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupByGroup"/> properties.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopiedSelection">
            <summary>
            If the user executes a CopyUri command on a selection, this object holds a weak
            reference to the copied items.  Then, if the items still exist when <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUri"/> is invoked,
            the copied items will be pasted. 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.Context">
            <summary>
            Selection context which describes the application mode we are in - search, contact list by status, contact list by group, etc...
            To configure the context, use <see cref="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ConfigureAllMenus(System.Collections.IList,Microsoft.Lync.Controls.MenuContext,System.Windows.Controls.Control,Microsoft.Lync.Controls.Internal.PopupContactCard)"/>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.Owner">
            <summary>
            The control which summoned this menu.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PopupContactCard">
            <summary>
            If set, the control representing the selected item.
            Used to provide support for View Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ConversationContext">
            <summary>
            The Conversation Context of the control which summoned this menu
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.HasContactsWhichAreNotGroups">
            <summary>
            True if the current selection includes contacts which are not DG's, GroupByGroups, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessaging">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCall">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCall">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideo">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingle">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultiple">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmail">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeeting">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFile">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUri">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUri">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContacts">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactList">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactTo">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactTo">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContacts">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroup">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactList">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContact">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ChangePrivacyRelationship">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupUp">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupDown">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroup">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CreateGroup">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroup">
            <summary> Menu rule </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCard">
            <summary> Menu rule </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule">
            <summary>
            Define a menu rule which controls the visibility and functionality of a menu.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Construct a rule, referencing the <see cref="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager"/> which provides data context.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.ExecuteCommand(System.Object)">
            <summary>
            Delegate method which executes the command for this rule.
            </summary>
            <param name="arg">Optional CommandParameter</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.CanExecuteCommand(System.Object)">
            <summary>
            Delegate method which enables or disables the command for this rule.
            </summary>
            <param name="arg">Optional CommandParameter</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.IsVisible">
            <summary>
            Predicate which governs the visibility of the menu item for this rule
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.ConfigureMenu">
            <summary>
            This method forces the menu to update its visibility based on the defined visibility rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.AllItemsInPermittedGroups(Microsoft.Lync.Controls.MenuContext,System.Collections.IList,Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.ContactListGroup)">
            <summary>
            Utility method which analyzes each contact model in the list, and determines if
            all of them are bound to one of the permitted groups.
            Some commands, on multi-select, should only be visible if the command is valid for every contact/group combination.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.IsOtherContactsGroup(Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            Returns true if the given <paramref name="groupModel"/> is the special
            "Other Contacts" group of unfiled contacts.
            </summary>
            <param name="groupModel"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.GetOtherContactsGroup">
            <summary>
            Returns the OtherContacts group of unfiled contacts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.GetUcClient">
            <summary>
            GetUcClient
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.IsNotSelfContact">
            <summary>
            Returns true, unless the current selection is "Self".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.SelectionIncludesContactType(Microsoft.Lync.Controls.Internal.Model.ContactType)">
            <summary>
            Returns true if there is a person or a BOT in the current selection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.StartConversation(Microsoft.Lync.Controls.Internal.Model.ConversationModality)">
            <summary>
            Starts a conversation with the given <paramref name="modality"/> for all <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Models"/>.
            </summary>
            <param name="modality">The <see cref="T:Microsoft.Lync.Controls.Internal.Model.ConversationModality"/> of the conversation you wish to start.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.StartConversation(Microsoft.Lync.Controls.Internal.Model.ConversationModality,Microsoft.Lync.Controls.Internal.Model.ConversationContextModel)">
            <summary>
            Starts a conversation with the given <paramref name="modality"/> for all <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Models"/>,
            using the specified <paramref name="contextModel"/> for context.
            </summary>
            <param name="modality">The <see cref="T:Microsoft.Lync.Controls.Internal.Model.ConversationModality"/> of the conversation you wish to start.</param>
            <param name="contextModel">The <see cref="T:Microsoft.Lync.Controls.Internal.Model.ConversationContextModel"/> to use in starting this conversation. </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.StartConversation(Microsoft.Lync.Controls.Internal.Model.ConversationModality,Microsoft.Lync.Controls.Internal.Model.ConversationContextModel,Microsoft.Lync.Controls.Internal.Model.IContactModel[])">
            <summary>
            Starts a conversation with the given <paramref name="modality"/> for all <see cref="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Models"/>,
            using the specified <paramref name="contextModel"/> for context.
            </summary>
            <param name="modality">The <see cref="T:Microsoft.Lync.Controls.Internal.Model.ConversationModality"/> of the conversation you wish to start.</param>
            <param name="contextModel">The <see cref="T:Microsoft.Lync.Controls.Internal.Model.ConversationContextModel"/> to use in starting this conversation. </param>
            <param name="contactModels">The set of models to use in the conversation</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.AppendUri(System.String,System.Text.StringBuilder)">
            <summary>
            Use this method to build a semi-colon separated list of URIs.
            Appends the <paramref name="value"/> string to the <paramref name="builder"/>.
            If the builder's buffer is not empty, a semi-colon is prepended before the value.
            This method strips away "sip:" prefixes.
            </summary>
            <param name="value"></param>
            <param name="builder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.IsCustomGroupSelected">
            <summary>
            Returns true if the user selected a (single) custom group.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.MenuVisibility">
            <summary>
            Controls visibility of the menu item.
            This property supports <see cref="T:Microsoft.Lync.Internal.Utilities.DataModel.NotifyPropertyChanged"/>
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.MenuCommand">
            <summary>
            The command to execute when this menu rule runs
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Manager">
            <summary>
            The menu manager 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Models">
            <summary>
            For convenience, this exposes the collection of contact models on which this menu operates, from the MenuManager
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.Context">
            <summary>
            For convenience, this exposes the context in which the menu was invoked, from the MenuManager
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MenuRule.ContactListGroup">
            <summary>
            This bitmask is used to define the set of contact list group types for which
            a given menu item may be visible.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessagingRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessagingRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessagingRule.CanExecuteCommand(System.Object)">
            <summary>
            CanExecuteCommand
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessagingRule.ExecuteCommand(System.Object)">
            <summary>
            Delegate method which executes the command for this rule.
            </summary>
            <param name="arg">Optional CommandParameter</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartInstantMessagingRule.IsVisible">
            <summary>
            IsVisible
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary> Constructor </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.ConfigureMenu">
            <summary>Configure the call submenus </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartAudioCallRule.ContextInformationModels">
            <summary> StartAudioCall submenus will be bound to the ContextInformationModels collection </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideoRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideoRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideoRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideoRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartVideoRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.ConfigureMenu">
            <summary>ConfigureMenu</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.GetCallbackNumber(System.Object,Microsoft.Lync.Controls.Internal.Model.IUCClientModel)">
            <summary>
            Converts an 'arg' into a callback number: arg.ToString() correlates to a ContactEndpointType
            We return the phone number on the current SelfContact for the specified ContactEndpointType
            </summary>
            <exception cref="T:System.ArgumentException">StartConferenceCall: expected parameter of type ContactEndpointType (as string)</exception>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.WorkSubmenuVisibility">
            <summary>
            WorkSubmenuVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.MobileSubmenuVisibility">
            <summary>
            MobileSubmenuVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.HomeSubmenuVisibility">
            <summary>
            HomeSubmenuVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.OtherSubmenuVisibility">
            <summary>
            OtherSubmenuVisibility
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartConferenceCallRule.NewNumberSubmenuVisibility">
            <summary>
            NewNumberSubmenuVisibility
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopSingleRule.NumberOfMonitors">
            <summary>NumberOfMonitors</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.ConfigureMenu">
            <summary>
            Configure menus
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.ShareSubmenuData">
            <summary>
            ShareSubmenuData
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.ShareDesktopSubmenuInfo.Rule">
            <summary>ShareDesktopMultipleRule</summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ShareDesktopMultipleRule.ShareDesktopSubmenuInfo.MonitorNumber">
            <summary>MonitorNumber</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmailRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmailRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmailRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmailRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.StartEmailRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeetingRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeetingRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeetingRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeetingRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ScheduleMeetingRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFileRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFileRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFileRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFileRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.SendFileRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCardRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCardRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCardRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCardRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ViewContactCardRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUriRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUriRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUriRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUriRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyUriRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUriRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUriRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUriRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUriRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PasteUriRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContactsRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContactsRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContactsRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContactsRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.PinContactsRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContactsRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContactsRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContactsRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContactsRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.UnpinContactsRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.ConfigureMenu">
            <summary>ConfigureMenu</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.CreateSubmenu(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            CreateSubmenu
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.GroupSubmenus">
            <summary>
            GroupSubmenus
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.GroupManagementSubmenuRule">
            <summary>
            GroupManagementSubmenuRule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.GroupManagementSubmenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.GroupManagementSubmenuRule.Group">
            <summary>
            Group
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ContactManagementMenuRule.GroupManagementSubmenuRule.GroupName">
            <summary>
            GroupName
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactToRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactToRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactToRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactToRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopyContactToRule.CreateSubmenu(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>CreateSubmenu</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopySubmenuRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopySubmenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopySubmenuRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopySubmenuRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CopySubmenuRule.SelectContactAfterMove(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Selecting the item after the Move is a 2 step process:
            (a) expand the target group to insure the moved item will be loaded and visual
            (b) after the item is loaded and visual, force it to be selected and scroll it into view.
            
            This method performs the first step, and instructs the ContactList to do the second
            step by leaving a reference to the contact in the <see cref="P:Microsoft.Lync.Controls.ContactList.ScrollToItemOnAdd"/>.
            </summary>
            <param name="contact"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactListRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactListRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactListRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactListRule.CanExecuteCommand(System.Object)">
            <summary>
            Delegate method which enables or disables the command for this rule.
            </summary>
            <param name="arg">Optional CommandParameter</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.AddToContactListRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactToRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactToRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactToRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactToRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveContactToRule.CreateSubmenu(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>CreateSubmenu</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveSubmenuRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveSubmenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager,Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveSubmenuRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroupRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroupRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroupRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroupRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromGroupRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactListRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactListRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactListRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactListRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RemoveFromContactListRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule.ConfigureMenu">
            <summary>ConfigureMenu</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.TagContactRule.Tagged">
            <summary>
            Tagged
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ChangePrivacyRelationshipRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ChangePrivacyRelationshipRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ChangePrivacyRelationshipRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.ChangePrivacyRelationshipRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupMenuRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupMenuRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary></summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupMenuRule.GetGroupManager">
            <summary>GetGroupManager</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupMenuRule.GetGroupSortingInterface">
            <summary>GetGroupSortingInterface</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.GroupMenuRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupUpRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupUpRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupUpRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupUpRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupDownRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupDownRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupDownRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.MoveGroupDownRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroupRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroupRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroupRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroupRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.RenameGroupRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CreateGroupRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CreateGroupRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CreateGroupRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.CreateGroupRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroupRule">
            <summary>
            Menu Rule
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroupRule.#ctor(Microsoft.Lync.Controls.Internal.ViewModel.MenuManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroupRule.CanExecuteCommand(System.Object)">
            <summary>CanExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroupRule.ExecuteCommand(System.Object)">
            <summary>ExecuteCommand</summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.MenuManager.DeleteGroupRule.IsVisible">
            <summary>IsVisible</summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.OverflowMenu">
            <summary>
            OverflowMenu Class
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.OverflowMenu.ContextInformationModelsProperty">
            <summary>
            Dependency Property for <c>ContextInformationModels</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.OnApplyTemplate">
            <summary>
            OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Attach conversation context information
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Remove conversation context information
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.OnContextualInformationChanged(Microsoft.Lync.Controls.ConversationContextualInfo,Microsoft.Lync.Controls.ConversationContextualInfo)">
            <summary>
            Re-populate our list of models based on the new contextual information
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.OverflowMenu.OnCreateAutomationPeer">
            <summary>
            OnCreateAutomationPeer override
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.OverflowMenu.ContextInformationModels">
            <summary>
            Internal list of models for Right button options
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.PopupContactCard">
            <summary>
            PopupContactCard Control
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.IsOpenProperty">
            <summary>
            Set/Get whether the contact card is open or close
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.IsPinnedProperty">
            <summary>
            True if the PopupContactCard should act like a standalone window, false otherwise
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.IsFloatingProperty">
            <summary>
            True if the PopupContactCard should act like a floating window, false otherwise
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.IsExpandedProperty">
            <summary>
            Set/Get whether the contact card is expanded or not,
            showing details area.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.IsSuppressedProperty">
            <summary>
            Whether to suppress the PopupContactCard.
            <c>true</c> suppresses the card, default is <c>false</c>
            </summary>
            <remarks>
            This property is useful if the PopupContactCard should only be shown in certain
            circumstances, for example if different views choose to show or not show it
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.DetailsHeightProperty">
            <summary>
            The Height of the details section, so positioning can be computed
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.CloseButtonVerticalOffsetProperty">
            <summary>
            The Vertical offset of the close ('X') button, so that it can be overlayed past the Note
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.SelectedTabIndexProperty">
            <summary>
            Identifies the SelectedTabIndex dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverActionProperty">
            <summary>
            Get or set the action the jellybean should take when a user hovers over it
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.SingleClickActionProperty">
            <summary>
            Get or set the action the jellybean should take when a user single-clicks on it
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.PlacementTargetProperty">
            <summary>
            A <c>FrameworkElement</c> to position the PopupContactCard relative to
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.PlacementProperty">
            <summary>
            The <c>PopupPlacementMode</c> to use when positioning the PopupContactCard
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverOnTargetProperty">
            <summary>
            A <c>FrameworkElement</c> whose mouse events the PopupContactCard should react to
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverOffTargetProperty">
            <summary>
            A <c>FrameworkElement</c> whose mouse events the PopupContactCard should react to
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.ClickTargetProperty">
            <summary>
            A <c>FrameworkElement</c> whose MouseUp event the PopupContactCard should react to
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.SingleClickActionTargetProperty">
            <summary>
            A <c>ButtonBase</c> whose Click event the PopupContactCard should use for its SingleClickAction
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCard.ModelTargetProperty">
            <summary>
            A <c>ContactBase</c> to get an internal Model from 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.#ctor">
            <summary>
            Default constructor for <c>PopupContactCard</c> control
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnUnloaded">
            <summary>
            Override OnUnloaded
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnApplyTemplate">
            <summary>
            Builds the visual tree for the PopupContactCard control when a new template is applied.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Override <c>OnIsSignedInPropertyChanged</c>
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnSourceChanged(System.Object,System.Object)">
            <summary>
            Override <c>OnSourceChanged</c>
            </summary>
            <param name="oldSource"></param>
            <param name="newSource"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.HandleContainerClosed(System.Object,System.EventArgs)">
            <summary>
            When the Container closes, the PopupContactCard has closed, so fire the 'Closed' event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.HandleContactTargetUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handler for the Unloaded event on ContactTarget.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.CloseContactCard">
            <summary>
            A way for internal code to try and close the card
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.DuplicateCard">
            <summary>
            Creates a completely new card to replace this one.  The new card will not be linked in any way to
            the old source of its Model and will allow a new card to be shown from the same <c>PopupContactCardHost</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.GetAttachedSource(System.Object)">
            <summary>
            Get an object that can be used to recreate the same model that <paramref name="oldSource"/> represents
            </summary>
            <param name="oldSource">The object to get a new Source from</param>
            <returns>An object that can be set as <c>ContactBase</c>.<c>Source</c>, or null if no source could be found</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.ShowContactCard(System.Boolean)">
            <summary>
            Show the contact card in either its brief or its detailed form
            </summary>
            <param name="inDetailedMode"><c>True</c> to display detailed contact card, <c>false</c> to display brief contact card</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.ShowContactCard(System.Boolean,System.Boolean)">
            <summary>
            Show the contact card in either its brief or its detailed form
            </summary>
            <param name="inDetailedMode"><c>True</c> to display detailed contact card, <c>false</c> to display brief contact card</param>
            <param name="showActivated"><c>True</c> to activate the card after it is displayed, <c>false</c> otherwise</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>PopupContactCard</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnLoaded">
            <summary>
            <c>OnLoaded</c> override.  After the Card loads, reset it's position
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            override <c>OnPreviewMouseLeftButtonDown</c> to set the card in 'floating' mode
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.HandleContainerWindowMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Event Handler for the <c>MouseLeftButtonDown</c> event of the container <c>Window</c>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.SetPosition(System.Windows.Point)">
            <summary>
            Try to set the position at <paramref name="desiredPos"/>, or move the position
            appropriately if <paramref name="desiredPos"/> would push the card off the screen
            </summary>
            <param name="desiredPos"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.GetScreenSizeForPoint(System.Double,System.Double)">
            <summary>
            Return the size of a screen for a given (x,y) point
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <returns>Size of the screen at (<paramref name="left"/>, <paramref name="top"/>)</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCard.GetAllScreenBounds">
            <summary>
            Return a <c>Rect</c> that encompasses all of the users screens.
            </summary>
            <returns></returns>
            <remarks>
            The <c>Rect</c> returned may have it's top left corner at negative coordinates for 
            the case when the secondary monitor is left of or on top of the main monitor
            </remarks>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.PopupContactCard.Closed">
            <summary>
            Occurs when the PopupContactCard is closed, for example by clicking the 'X' button
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.Internal.PopupContactCard.Pinned">
            <summary>
            Occurs when the PopupContactCard is pinned by clicking the 'pin' button
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.IsOpen">
            <summary>
            Sets/Gets whether the card is closed/open
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.IsPinned">
            <summary>
            Sets/Gets whether the PopupContactCard should be 'pinned' 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.IsFloating">
            <summary>
            Sets/Gets whether the PopupContactCard should be 'floating' 
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.IsExpanded">
            <summary>
            Set/Get whether the contact card is expanded or not, showing details area.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.SelectedTabIndex">
            <summary>
            Gets or sets the index of the tab item to display when the <c>PopupContactCard</c> is expanded
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.IsSuppressed">
            <summary>
            CLR backing for IsSuppressedProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.DetailsHeight">
            <summary>
            The Height of the details section, so positioning can be computed
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.CloseButtonVerticalOffset">
            <summary>
            Get the vertical offset of the the 'X' button
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.PlacementTarget">
            <summary>
            Gets/sets a <c>FrameworkElement</c> to position the PopupContactCard relative to
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.Placement">
            <summary>
            Gets/sets the <c>PopupPlacementMode</c> to use when positioning the PopupContactCard
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverOnTarget">
            <summary>
            CLR backing for HoverOnTargetProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverOffTarget">
            <summary>
            CLR backing for HoverOffTargetProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.ModelTarget">
            <summary>
            CLR backing for ModelTargetProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.ClickTarget">
            <summary>
            CLR backing for ClickTargetProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.SingleClickActionTarget">
            <summary>
            CLR backing for SingleClickActionTargetProperty
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.HoverAction">
            <summary>
            Specify the action to take when the user hovers over the popup target
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCard.SingleClickAction">
            <summary>
            Specify the action to take if the popup target is a button, and the user clicks it.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.PopupContactCardHost">
            <summary>
            PopupContactCardHost Control
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.PopupContactCardProperty">
            <summary>
            The <c>PopupContactCard</c> that this control is hosting
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsHoverOnTargetProperty">
            <summary>
            Attached property to mark a control as the control to use for mouse on events
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsHoverOffTargetProperty">
            <summary>
            Attached property to mark a control as the control to use for mouse off events
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsClickTargetProperty">
            <summary>
            Attached property to mark a control as the control to use for click events
            that control timing behavior and the display of the hover card
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsSingleClickActionTargetProperty">
            <summary>
            Attached property to mark a control as the control to use to respond to the 
            SingleClickAction property on the hosted PopupContactCard
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsModelTargetProperty">
            <summary>
            Attached property to mark a control as the control to use for the model of the hosted <c>PopupContactCard</c>
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.PopupContactCardHost.IsPlacementTargetProperty">
            <summary>
            Attached property to mark a control as the control to use to position the <c>PopupContactCard</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsHoverOnTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsHoverOnTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsHoverOnTarget property.</param>
            <returns>Value of the IsHoverOnTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsHoverOnTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsHoverOnTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsHoverOffTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsHoverOffTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsHoverOffTarget property.</param>
            <returns>Value of the IsHoverOffTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsHoverOffTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsHoverOffTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsClickTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsClickTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsClickTarget property.</param>
            <returns>Value of the IsClickTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsClickTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsClickTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsSingleClickActionTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsSingleClickActionTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsSingleClickActionTarget property.</param>
            <returns>Value of the IsSingleClickActionTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsSingleClickActionTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsSingleClickActionTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsModelTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsModelTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsModelTarget property.</param>
            <returns>Value of the IsModelTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsModelTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsModelTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.GetIsPlacementTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsPlacementTarget property of the specified object.
            </summary>
            <param name="obj">Object to query concerning the IsPlacementTarget property.</param>
            <returns>Value of the IsPlacementTarget property.</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetIsPlacementTarget(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the IsPlacementTarget property of the specified object.
            </summary>
            <param name="obj">Object to set the property on.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.FindHostAndSetPropertyOnHostedCard``1(System.Windows.DependencyProperty,``0)">
            <summary>
            Find the a <c>PopupContactCardHost</c> for <paramref name="propertyValueToSet"/> by
            looking up the logical tree, and after a host is found, set a property on the
            <c>PopupContactCard</c> that that host is hosting
            </summary>
            <typeparam name="TPropertyType">The type of the property to set on the hosted <c>PopupContactCard</c></typeparam>
            <param name="propertyToSet">The property to set on the hosted <c>PopupContactCard</c></param>
            <param name="propertyValueToSet">The value the property to set on the hosted <c>PopupContactCard</c></param>
            <remarks>
            The <c>PopupContactCardHost</c> has several attached properties which all work the same way; when one is set,
            the control on which the property is set must descend from a <c>PopupContactCardHost</c> instance in the tree.
            When that instance is found, it sets the corresponding dependency property on the <c>PopupContactCard</c> that
            it is hosting, based on the attached property that was set
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.SetPropertyOnHostedCard``1(System.Windows.DependencyProperty,``0)">
            <summary>
            Set the value of a dependency property on the <c>PopupContactCard</c> that this control is hosting
            </summary>
            <typeparam name="TPropertyType">The type of the property to set on the hosted <c>PopupContactCard</c></typeparam>
            <param name="propertyToSet">The property to set on the hosted <c>PopupContactCard</c></param>
            <param name="propertyValueToSet">The value the property to set on the hosted <c>PopupContactCard</c></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PopupContactCardHost.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>PopupContactCardHost</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PopupContactCardHost.PopupContactCard">
            <summary>
            The <c>PopupContactCard</c> that this control is hosting
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.PresenceIndicator">
            <summary>
            The PresenceIndicator control displays one of several icons that indicate 
            the presence of a given user. 
            </summary>
            <remarks>
            The PresenceIndicator control is a stand-alone control representing 
            a single contact, and enables access to the quick connect menu and the 
            contact card for the user. The control also can display a photo 
            for the given user.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceIndicator.ActivityStatusProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.PresenceIndicator.ActivityStatus"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceIndicator.HoverActionProperty">
            <summary>
            Identifies the <see cref="F:Microsoft.Lync.Controls.PresenceIndicator.HoverActionProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.PresenceIndicator.SingleClickActionProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.PresenceIndicator.SingleClickAction"/> dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.#ctor">
            <summary>
            Initializes a new instance of the PresenceIndicator class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event. </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.PresenceIndicator.OnCreateAutomationPeer">
            <summary>
            Return the <c>AutomationPeer</c> object for the <c>PresenceIndicator</c> control.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.PresenceIndicator.ActivityStatus">
            <summary>
            Gets a localized string representing the user's ActivityStatus, for example "In a meeting".
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.PresenceIndicator.HoverAction">
            <summary>
            Gets or sets the action the control should take when a user hovers over it.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.PresenceIndicator.SingleClickAction">
            <summary>
            Gets or sets the action the PresenceIndicator control should take when a user single-clicks on it.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.StartAudioCallButton">
            <summary>
            Use the StartAudioCallButton control in Lync Control 
            applications to enable the user to open a Lync 
            conversation window and start a voice conversation between the 
            user who activated the control, and another user.
            </summary>
            <remarks>
            StartAudioCallButton is a split-button control. When clicked, 
            the left side of the split button places a call to the default 
            number associated with the contact. The right side of the control 
            exposes a menu of calling options, such as Lync Call, 
            Work, and Voice Mail.
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.StartAudioCallButton.ContextInformationModelsProperty">
            <summary>
            Identifies the <see cref="P:Microsoft.Lync.Controls.StartAudioCallButton.ContextInformationModels"/> property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.#ctor">
            <summary>
            Instantiates a StartAudioCallButton control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.CanExecuteConferenceCallConditional(System.Object)">
            <summary>
            Depending on the type of object passed in, this method executes
            the CanExecute method for a group or a contact.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.ExecuteConferenceCallConditional(System.Object)">
            <summary>
            Executes a conference call with an optional message box.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.GetConfirmation(System.String)">
            <summary>
            Shows a message box to confirm that the user wishes to make a conference call.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.OnCreateAutomationPeer">
            <summary>
            Returns the <c>AutomationPeer</c> object for the StartAudioCallButton control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or 
            internal processes (such as a rebuilding layout pass) 
            call <c>ApplyTemplate</c>. 
            In simplest terms, this means the method is called just before a UI element displays 
            in an application. 
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.OnContextualInformationChanged(Microsoft.Lync.Controls.ConversationContextualInfo,Microsoft.Lync.Controls.ConversationContextualInfo)">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.HandleStartAudioCanExecuteChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when changes occur that affect whether or not the call should launch.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.HandleDropDownClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the drop-down menu closes.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartAudioCallButton.HandleDropDownOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when the drop-down menu opens.
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.StartAudioCallButton.DropDownOpened">
            <summary>
            Fired when the drop down menu opens
            </summary>
        </member>
        <member name="E:Microsoft.Lync.Controls.StartAudioCallButton.DropDownClosed">
            <summary>
            Fired when the drop down menu closes
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.StartAudioCallButton.StartConferenceCallConditionalCommand">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.StartAudioCallButton.ContextInformationModels">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextButtonAutomationPeer">
            <summary>
            SendFileAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.HelpTextButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextButtonAutomationPeer.GetNameCore">
            <summary>
            Override GetNameCore
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextToggleButtonAutomationPeer">
            <summary>
            SendFileAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextToggleButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.HelpTextToggleButton)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.HelpTextToggleButtonAutomationPeer.GetNameCore">
            <summary>
            Override GetNameCore
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.RadioMenuItemAutomationPeer">
            <summary>
            RadioMenuItemAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.RadioMenuItemAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.RadioMenuItem)">
            <summary>
            RadioMenuItemAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.RadioMenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            GetPattern override
            </summary>
            <param name="patternInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.RadioMenuItemAutomationPeer.GetClassNameCore">
            <summary>
            GetClassNameCore overrride
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.AutomationPeers.RadioMenuItemAutomationPeer.TypeSafeOwner">
            <summary>
            Return the Owner of this AutomationPeer as a <c>RadioMenuItem</c>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.SplitButtonAutomationPeer">
            <summary>
            SplitButtonAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.SplitButtonAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.SplitButton)">
            <summary>
            SplitButtonAutomationPeer Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.SplitButtonAutomationPeer.GetChildrenCore">
            <summary>
            GetChildrenCore Override
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.AutomationPeers.SplitButtonAutomationPeer.TypeSafeOwner">
            <summary>
            Return the Owner of this AutomationPeer as a <c>SplitButton</c>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Dock">
            <summary>
            Specifies values that control the behavior of a control positioned
            inside another control.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Dock.Left">
            <summary>
            Specifies that the control should be positioned on the left of the
            control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Dock.Top">
            <summary>
            Specifies that the control should be positioned on top of the
            control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Dock.Right">
            <summary>
            Specifies that the control should be positioned on the right of the
            control.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.Dock.Bottom">
            <summary>
            Specifies that the control should be positioned at the bottom of 
            control.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.DockPanel">
            <summary>
            Arranges child elements around the edges of the panel.  Optionally, 
            last added child element can occupy the remaining space.
            </summary>
            <QualityBand>Stable</QualityBand>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.DockPanel._ignorePropertyChange">
            <summary>
            A value indicating whether a dependency property change handler
            should ignore the next change notification.  This is used to reset
            the value of properties without performing any of the actions in
            their change handlers.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.DockPanel.LastChildFillProperty">
            <summary>
            Identifies the
            <see cref="P:Microsoft.Lync.Controls.Framework.Controls.DockPanel.LastChildFill" />
            dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.OnLastChildFillPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LastChildFillProperty property changed handler.
            </summary>
            <param name="d">DockPanel that changed its LastChildFill.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the
            <see cref="P:Microsoft.Lync.Controls.Framework.Controls.DockPanel.Dock" /> attached
            property for the specified element.
            </summary>
            <param name="element">
            The element from which the property value is read.
            </param>
            <returns>
            The <see cref="P:Microsoft.Lync.Controls.Framework.Controls.DockPanel.Dock" /> property
            value for the element.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.SetDock(System.Windows.UIElement,Microsoft.Lync.Controls.Internal.Dock)">
            <summary>
            Sets the value of the
            <see cref="P:Microsoft.Lync.Controls.Framework.Controls.DockPanel.Dock" /> attached
            property for the specified element to the specified dock value.
            </summary>
            <param name="element">
            The element to which the attached property is assigned.
            </param>
            <param name="dock">
            The dock value to assign to the specified element.
            </param>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.DockPanel.DockProperty">
            <summary>
            Identifies the
            <see cref="P:Microsoft.Lync.Controls.Framework.Controls.DockPanel.Dock" />
            attached property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.OnDockPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DockProperty property changed handler.
            </summary>
            <param name="d">UIElement that changed its Dock.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" /> in preparation
            for arranging them during the
            <see cref="M:Microsoft.Lync.Controls.Framework.Controls.DockPanel.ArrangeOverride(System.Windows.Size)" />
            pass.
            </summary>
            <param name="constraint">
            The area available to the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" />.
            </param>
            <returns>
            The desired size of the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" />.
            </returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.DockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the child elements of the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" /> control.
            </summary>
            <param name="arrangeSize">
            The area in the parent element that the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" /> should use to
            arrange its child elements.
            </param>
            <returns>
            The actual size of the
            <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" /> after the child
            elements are arranged. The actual size should always equal
            </returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.DockPanel.LastChildFill">
            <summary>
            Gets or sets a value indicating whether the last child element
            added to a <see cref="T:Microsoft.Lync.Controls.Framework.Controls.DockPanel" />
            resizes to fill the remaining space.
            </summary>
            <value>
            True if the last element added resizes to fill the remaining space,
            false to indicate the last element does not resize. The default is
            true.
            </value>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.HelpTextButton">
            <summary>
            HelpTextButton Class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.HelpTextButton.OnCreateAutomationPeer">
            <summary>
            Override OnCreateAutomationPeer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.HelpTextToggleButton">
            <summary>
            HelpTextToggleButton Class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.HelpTextToggleButton.OnCreateAutomationPeer">
            <summary>
            Override OnCreateAutomationPeer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ImageButton">
            <summary>
            ImageButton Control
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ImageButton.ImageNormalProperty">
            <summary>
            ImageNormal
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ImageButton.ImageHoverProperty">
            <summary>
            ImageHover
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ImageButton.ImageDownProperty">
            <summary>
            ImageDown
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ImageButton.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ImageButton.ImageNormal">
            <summary>
            ImageNormal Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ImageButton.ImageHover">
            <summary>
            ImageHover Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ImageButton.ImageDown">
            <summary>
            ImageDown Property
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.RadioMenuItem">
            <summary>
            TruncatedTextBlock support
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.MenuItem">
            <summary>
            Framework MenuItem for WPF
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.MenuItem.ParentContextMenuProperty">
            <summary>
            ContextMenu DependencyProperty
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.MenuItem.GetContainerForItemOverride">
            <summary>
            GetContainerForItemOverride
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.MenuItem.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Pressing SPACE is the equivalent of clicking the menu item.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.MenuItem.ParentContextMenu">
            <summary>
            Gets parent <c>ContextMenu</c> if this <c>MenuItem</c> conatins one
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.RadioMenuItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.RadioMenuItem.GetGroupMenuItemSiblings">
            <summary>
            Get the <c>RadioMenuItem</c> siblings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.RadioMenuItem.OnClick">
            <summary>
            OnClick override
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.RadioMenuItem.OnChecked(System.Windows.RoutedEventArgs)">
            <summary>
            OnChecked override
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.RadioMenuItem.OnCreateAutomationPeer">
            <summary>
            OnCreateAutomationPeer override
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.RadioMenuItem.GroupName">
            <summary>
            GroupName Property.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.SplitButton">
            <summary>
            SplitButton Control
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.DropDownProperty">
            <summary>
            DropDown DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.CommandProperty">
            <summary>
            CommandProperty DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.CommandParameterProperty">
            <summary>
            CommandParameterProperty DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.IsMenuOpenProperty">
            <summary>
            IsMenuOpen DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.LeftToolTipProperty">
            <summary>
            LeftToolTip DependencyProperty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.SplitButton.RightToolTipProperty">
            <summary>
            LeftToolTip DependencyProperty
            </summary>       
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.SplitButton.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.SplitButton.OnApplyTemplate">
            <summary>
            OnApplyTemplate override.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.SplitButton.ExtractTemplatePart``1(System.String)">
            <summary>
            Get the template part of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="partName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.SplitButton.OnMenuClosed(System.Object,System.EventArgs)">
            <summary>
            Menu has been closed -> bring buttons in normal state
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.SplitButton.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>SplitButton</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.RightToolTip">
            <summary>
            RightToolTip Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.LeftToolTip">
            <summary>
            LeftToolTip Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.DropDown">
            <summary>
            DropDown Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.Command">
            <summary>
            Command Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.CommandParameter">
            <summary>
            CommandParameter Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.IsMenuOpen">
            <summary>
            IsMenuOpen Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.RightButton">
            <summary>
            Private implementation property to control <c>RightButton</c> property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.SplitButton.LeftButton">
            <summary>
            Private implementation property to control <c>LeftButton</c> property.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.TruncatedTextBlock">
            <summary>
            TruncatedTextBlock support
            </summary>
            <summary>
            TruncatedTextBlock specific for Wpf
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.TextWrappingProperty">
            <summary>
            Gets or sets how the TruncatedTextBlock wraps text.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.TextDecorationsProperty">
            <summary>
            A System.Windows.TextDecorationCollection, or null if no text decorations are applied.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.TextProperty">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.UseEllipsisProperty">
            <summary>
            UseEllipsis
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.IsTruncatedProperty">
            <summary>
            IsTruncated
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.#ctor">
            <summary>
            Default constructor for TruncatedTextBlock
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.OnApplyTemplate">
            <summary>
            Override OnApplyTemplate
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Override OnRenderSizeChanged to update relevant properties
            </summary>
            <param name="sizeInfo"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.TextWrapping">
            <summary>
            Identifies the TextWrappingProperty property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.TextDecorations">
            <summary>
            Identifies the TextDecorations dependency property.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.Text">
            <summary>
            Gets and sets the text to be displayed and possibly truncated.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.IsTruncated">
            <summary>
            IsTruncated
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.TruncatedTextBlock.UseEllipsis">
            <summary>
            Gets or Sets the flag to use the Ellipsis "...", when truncating text.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.WatermarkedTextBox">
            <summary>
            WatermarkedTextBox is a specialized form of TextBox which displays custom visuals when its contents are empty
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.WatermarkProperty">
            <summary>
            Watermark dependency property
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Lync.Controls.Internal.WatermarkedTextBox"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.ChangeVisualState">
            <summary>
            Change to the correct visual state for the textbox.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.ChangeVisualState(System.Boolean)">
            <summary>
            Change to the correct visual state for the textbox.
            </summary>
            <param name="useTransitions">
            true to use transitions when updating the visual state, false to
            snap directly to the new visual state.
            </param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.OnApplyTemplate">
            <summary>
            Called when template is applied to the control.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.ExtractTemplatePart``1(System.String)">
            <summary>
            Get the template part of type <typeparamref name="T"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="partName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.OnWatermarkPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when watermark property is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.WatermarkedTextBox.Watermark">
            <summary>
            Watermark content
            </summary>
            <value>The watermark.</value>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.BooleanToTextWrap">
            <summary>
            BooleanToTextWrap
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToTextWrap.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToTextWrap.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.BooleanToVisibility">
            <summary>
            BooleanToVisibility
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToVisibility.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToVisibility.ConvertValue(System.Boolean)">
            <summary>
            ConvertValue
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.BooleanToVisibility.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.CalendarStateToString">
            <summary>
            Convert <c>CalendarStateModel</c> to <c>String</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.CalendarStateToString.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert <c>CalendarStateModel</c> to <c>String</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.CalendarStateToString.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.CalendarStateToString.GetLocalizedStringForCalendarState(Microsoft.Lync.Controls.Internal.Model.ContactCalendarStateType)">
            <summary>
            Get the localized string for <c>ContactCalendarStateType</c>
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.EnumToInt">
            <summary>
            Enum To integer
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToInt.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            IValueConverter
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.EnumToInt.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.NotBooleanToVisibility">
            <summary>
            NotBooleanToVisibility
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.NotBooleanToVisibility.ConvertValue(System.Boolean)">
            <summary>
            ConvertValue
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.Converters.StreamToImageSource">
            <summary>
            StreamToImageSource
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StreamToImageSource.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts <c>Stream</c> to <c>BitmapImage</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.Converters.StreamToImageSource.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            ConvertBack
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.AutomationPeers.ContextMenuAutomationPeer">
            <summary>
            ContextMenuAutomationPeer class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.AutomationPeers.ContextMenuAutomationPeer.#ctor(Microsoft.Lync.Controls.Internal.ContextMenu)">
            <summary>
            Constructor
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.PagedCollectionView">
            <summary>
            TODO: Place holder for PagedCollectionView class implementation
            This class exists today in Silverlight but not in WPF
            pending implementation
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.PagedCollectionView.#ctor(System.Collections.IEnumerable,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="source"></param>
            <param name="isDataSorted"></param>
            <param name="isDataInGroupOrder"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.PagedCollectionView.PageSize">
            <summary>
            The maximum number of contacts returned by the view
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.TextBlockHelpers">
            <summary>
            Static and Extension methods for <c>TextBlock</c>
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TextBlockHelpers.GetIsTruncated(System.Windows.Controls.TextBlock)">
            <summary>
            Returns whether this textblock has been truncated
            </summary>
            <param name="targetControl"></param>
            <returns><c>true</c> if the <c>TextBlock</c> is truncated, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TextBlockHelpers.GetTrimmingPositon(System.Windows.Controls.TextBlock)">
            <summary>
            Finds the last visible TextPointer
            </summary>
            <param name="textBlock"></param>
            <returns>The last visible (non-trimmed) <c>TextPointer</c> in <paramref name="textBlock"/> or null if it is not trimmed</returns>
            <remarks>Uses a binary search to find the last visible TextPointer</remarks>        
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TextBlockHelpers.FindVisiblePartition(System.Windows.Controls.TextBlock,System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
            <summary>
            Find the TextPointer between start and end that partitions start and end into visible and clipped TextPointers
            </summary>
            <param name="textBlock">TextBlock that TextPointers may be clipped against</param>
            <param name="start">Beginning or range to search</param>
            <param name="end">End of range to search</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.TextBlockHelpers.IsPointerVisible(System.Windows.Controls.TextBlock,System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
            <summary>
            Test to see if a TextSource symbol (text or embedded objects) is visible
            </summary>
            <param name="textBlock">TextBlock that contains the symbol</param>
            <param name="position">Position adjacent to the symbol</param>
            <param name="direction">Direction of the symbol relative to position</param>
            <returns>True if the symbol adjacent to position in direction is visible</returns>
            <remarks>Will sometimes trigger false negatives for 0 width symbols</remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ContextMenu">
            <summary>
            Framework ContextMenu for WPF
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ContextMenu.GetContainerForItemOverride">
            <summary>
            Return Framework MenuItem Type
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ContextMenu.Owner">
            <summary>
            The <c>FrameworkElement</c> that opens this ContextMenu
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.FocuslessButton">
            <summary>
            FocuslessButton control implementation
            </summary>
            <remarks>
            The FocuslessButton is used to look like a Button (have the same Visual States) but
            does not swallow its Mouse*Down events, and does not receive Focus
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FocuslessButton.#ctor">
            <summary>
            Default constructor for FocuslessButton
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FocuslessButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Override OnMouseLeftButtonDown to mimic the visual effect of a click
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FocuslessButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Override OnMouseLeftButtonUp to unhandle the event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.FocuslessButton.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>FocuslessButton</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.HyperlinkButton">
            <summary>
            HyperlinkButton control implementation
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.HyperlinkButton._acceptableUriSchemes">
            <summary>
            A list of the schemes that the button will launch.  Any other scheme will log an error.
            </summary>
            <remarks>
            Silverlight's HyperlinkButton accepts the following schemes:
             - http
             - https
             - file
             - mailto
             - mms
            This control could accept all of those as well, but they are not used and so are not accepted now
            </remarks>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.HyperlinkButton.NavigateUriProperty">
            <summary>
            Identifies the NavigateUri dependency property.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.HyperlinkButton.TargetNameProperty">
            <summary>
            Identifies the TargetName dependency property.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.HyperlinkButton.OnClick">
            <summary>
            Override <c>OnClick</c> to navigate when the button is clicked
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.HyperlinkButton.OnCreateAutomationPeer">
            <summary>
            Return <c>AutomationPeer</c> for <c>HyperlinkButton</c> control.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.HyperlinkButton.NavigateUri">
            <summary>
            Gets or sets a URI to navigate to when the link is clicked.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.HyperlinkButton.TargetName">
            <summary>
            Gets or sets the name of a target window or frame.
            </summary>
            <remarks>
            This property only exists for API-compatibility with Silverlight
            and will have no effect
            </remarks>
        </member>
        <member name="T:Microsoft.Lync.Controls.StartInstantMessagingButton">
            <summary>
            Use the StartInstantMessagingButton control in Lync Control applications to 
            enable the user to open a Lync conversation window and start an instant 
            messaging conversation between the user who activated the control, and another user specified 
            by the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source"/> property.
            </summary>
            <remarks>
            The control can also start an IM conversation with a distribution group.
            </remarks>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartInstantMessagingButton.#ctor">
            <summary>
            Instantiates a StartInstantMessagingButton class.
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.StartInstantMessagingButton.OnCreateAutomationPeer">
            <summary>
            Returns the StartInstantMessagingButton automation peer.
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Properties.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.AvailabilityAway">
            <summary>
              Looks up a localized string similar to Away.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.AvailabilityOnline">
            <summary>
              Looks up a localized string similar to Online.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.AvailabilityUnavailable">
            <summary>
              Looks up a localized string similar to Unavailable.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.AvailabilityUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarInfoDisplayed">
            <summary>
              Looks up a localized string similar to Calendar: {0} until {1}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateBusy">
            <summary>
              Looks up a localized string similar to Busy.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateDetailsCurrentlyXYatZ">
            <summary>
              Looks up a localized string similar to Currently {0}. {1} at {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateDetailsForNextHours">
            <summary>
              Looks up a localized string similar to {0} for the next 8 hours.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateDetailsFreeUntil">
            <summary>
              Looks up a localized string similar to Free until {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateDetailsNotWorkingUntil">
            <summary>
              Looks up a localized string similar to Not working until {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateFree">
            <summary>
              Looks up a localized string similar to Free.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateNotAvailable">
            <summary>
              Looks up a localized string similar to Not available.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateNotWorking">
            <summary>
              Looks up a localized string similar to Outside of working hours.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateOutOfOffice">
            <summary>
              Looks up a localized string similar to Out of office.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateTentative">
            <summary>
              Looks up a localized string similar to Tentative.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CalendarStateUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CallButtonLabel">
            <summary>
              Looks up a localized string similar to Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactAccessLevelBlocked">
            <summary>
              Looks up a localized string similar to Blocked.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to Card provides details about {0} contact&apos;s availability and activity.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderCalendar">
            <summary>
              Looks up a localized string similar to Calendar.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderDepartment">
            <summary>
              Looks up a localized string similar to Department.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderDescription">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderDGOwners">
            <summary>
              Looks up a localized string similar to Owners.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderEmail">
            <summary>
              Looks up a localized string similar to E-mail.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderHome">
            <summary>
              Looks up a localized string similar to Home.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderLocation">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderMobile">
            <summary>
              Looks up a localized string similar to Mobile.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderOffice">
            <summary>
              Looks up a localized string similar to Office.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailHeaderWork">
            <summary>
              Looks up a localized string similar to Work.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailOrganizationHeaderManagement">
            <summary>
              Looks up a localized string similar to Management:.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailOrganizationHeaderManager">
            <summary>
              Looks up a localized string similar to Manager:.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailOrganizationHeaderReports">
            <summary>
              Looks up a localized string similar to Direct Reports:.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailOrganizationHeaderSharesManager">
            <summary>
              Looks up a localized string similar to Shares same Manager:.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailTabContact">
            <summary>
              Looks up a localized string similar to Contact.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailTabGroup">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailTabMembers">
            <summary>
              Looks up a localized string similar to Members.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailTabOrganization">
            <summary>
              Looks up a localized string similar to Organization.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardDetailTimeIsLocal">
            <summary>
              Looks up a localized string similar to Time shown is contact’s local time.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardExpanderCollapse">
            <summary>
              Looks up a localized string similar to Click to collapse note.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardExpanderCollapseToolTip">
            <summary>
              Looks up a localized string similar to Collapse Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardExpanderExpand">
            <summary>
              Looks up a localized string similar to Click to display entire note.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardExpanderExpandToolTip">
            <summary>
              Looks up a localized string similar to Expand Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactCardScheduleMeeting">
            <summary>
              Looks up a localized string similar to Schedule a meeting.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeContact">
            <summary>
              Looks up a localized string similar to _Lync Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeHome">
            <summary>
              Looks up a localized string similar to _Home.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeMobile">
            <summary>
              Looks up a localized string similar to _Mobile.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeOther">
            <summary>
              Looks up a localized string similar to _Other.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeVoiceMail">
            <summary>
              Looks up a localized string similar to _Voice Mail.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactEndpointTypeWork">
            <summary>
              Looks up a localized string similar to _Work.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListCustomGroupLabel">
            <summary>
              Looks up a localized string similar to Custom Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListDistGroupLabel">
            <summary>
              Looks up a localized string similar to Distribution Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterGroup">
            <summary>
              Looks up a localized string similar to _Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterGroupToolTip">
            <summary>
              Looks up a localized string similar to Display contacts by group..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterRelationship">
            <summary>
              Looks up a localized string similar to _Relationship.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterRelationshipToolTip">
            <summary>
              Looks up a localized string similar to Display contacts by level of permissions..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterStatus">
            <summary>
              Looks up a localized string similar to _Status.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFilterStatusToolTip">
            <summary>
              Looks up a localized string similar to Display contacts by status..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListFrequentContactsGroupName">
            <summary>
              Looks up a localized string similar to Frequent Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListOtherGroupLabel">
            <summary>
              Looks up a localized string similar to Other Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListUnknownGroupLabel">
            <summary>
              Looks up a localized string similar to Unkown Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewAvailability">
            <summary>
              Looks up a localized string similar to Sort by _Availability.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewDisplayName">
            <summary>
              Looks up a localized string similar to Sort by _Display Name.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewOneLine">
            <summary>
              Looks up a localized string similar to _Name View.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewShowFrequentContacts">
            <summary>
              Looks up a localized string similar to Show F_requent Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewShowFriendlyName">
            <summary>
              Looks up a localized string similar to Show _Friendly Name.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactListViewTwoLine">
            <summary>
              Looks up a localized string similar to _Picture View.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContactsListAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to Your {0} contact list..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuAddToContactList">
            <summary>
              Looks up a localized string similar to _Add to Contact List.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuChangePrivacy">
            <summary>
              Looks up a localized string similar to Cha_nge Privacy Relationship.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuCopyContact">
            <summary>
              Looks up a localized string similar to C_opy Contact To.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuCopyUri">
            <summary>
              Looks up a localized string similar to Cop_y.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuGroupDelete">
            <summary>
              Looks up a localized string similar to _Delete Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuGroupMoveDown">
            <summary>
              Looks up a localized string similar to Move Group Do_wn.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuGroupMoveUp">
            <summary>
              Looks up a localized string similar to Move Group _Up.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuGroupNew">
            <summary>
              Looks up a localized string similar to Create _New Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuGroupRename">
            <summary>
              Looks up a localized string similar to _Rename Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuMoveContact">
            <summary>
              Looks up a localized string similar to _Move Contact To.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuPasteUri">
            <summary>
              Looks up a localized string similar to _Paste.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuPinContact">
            <summary>
              Looks up a localized string similar to _Pin to Frequent Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuRemoveContact">
            <summary>
              Looks up a localized string similar to _Remove From Contacts List.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuRemoveContactFromGroup">
            <summary>
              Looks up a localized string similar to Remove From _Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuSendEmail">
            <summary>
              Looks up a localized string similar to Send an _E-mail Message.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuSendIM">
            <summary>
              Looks up a localized string similar to Send an _Instant Message.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuStartCall">
            <summary>
              Looks up a localized string similar to _Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuStartConference">
            <summary>
              Looks up a localized string similar to Start a Conference _Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuStartConferenceByCalling">
            <summary>
              Looks up a localized string similar to Start Conference by Calling Me At.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuStartConferenceNowUsing">
            <summary>
              Looks up a localized string similar to Start Conference Now Using.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuTag">
            <summary>
              Looks up a localized string similar to _Tag For Status Change Alerts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuUnpinContact">
            <summary>
              Looks up a localized string similar to _Unpin from Frequent Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuViewContactCard">
            <summary>
              Looks up a localized string similar to _View Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuWithLync">
            <summary>
              Looks up a localized string similar to _Lync.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuWithNewNumber">
            <summary>
              Looks up a localized string similar to _New Number....
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ContextMenuWithOtherDevice">
            <summary>
              Looks up a localized string similar to _Other Device.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.CustomContactsListAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to A custom contact list..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Day">
            <summary>
              Looks up a localized string similar to day.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Days">
            <summary>
              Looks up a localized string similar to days.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.EigthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Eigth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.EntireDesktop">
            <summary>
              Looks up a localized string similar to All Monitors.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ERROR_PROVIDER_BROWSER">
            <summary>
              Looks up a localized string similar to {0} are not supported in this web browser.  Please use {1} to access this application. [Detected browser type: {2}].
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ERROR_PROVIDER_OS">
            <summary>
              Looks up a localized string similar to {0} are not supported on this operating system.  Please use {1} to access this application. [Detected OS: {2}].
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.FifthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Fifth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.FourthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Fourth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Hour">
            <summary>
              Looks up a localized string similar to hour.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Hours">
            <summary>
              Looks up a localized string similar to hours.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.LocalUserNoteWatermark">
            <summary>
              Looks up a localized string similar to What&apos;s happening today?.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MainMonitorPrefix">
            <summary>
              Looks up a localized string similar to Main.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.Minutes">
            <summary>
              Looks up a localized string similar to mins.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MonitorSuffix">
            <summary>
              Looks up a localized string similar to  Monitor.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyNoteBoxWatermark">
            <summary>
              Looks up a localized string similar to What&apos;s happening today?.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserAppearAway">
            <summary>
              Looks up a localized string similar to _Appear Away.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserAvailable">
            <summary>
              Looks up a localized string similar to A_vailable.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserBeRightBack">
            <summary>
              Looks up a localized string similar to B_e Right Back.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserBusy">
            <summary>
              Looks up a localized string similar to _Busy.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserDoNotDisturb">
            <summary>
              Looks up a localized string similar to Do Not _Disturb.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserOffWork">
            <summary>
              Looks up a localized string similar to Off _Work.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.MyPresenceChooserResetStatus">
            <summary>
              Looks up a localized string similar to Rese_t Status.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.NinthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Ninth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.OverflowMenuScheduleMeeting">
            <summary>
              Looks up a localized string similar to Schedu_le a Meeting.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.OverflowMenuSendFile">
            <summary>
              Looks up a localized string similar to Send a _file....
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.OverflowMenuShare">
            <summary>
              Looks up a localized string similar to S_hare.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.OverflowMenuStartVideo">
            <summary>
              Looks up a localized string similar to Start a _Video Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.OverflowMenuViewMySite">
            <summary>
              Looks up a localized string similar to Vie_w MySite.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PopupContactCardCloseToolTip">
            <summary>
              Looks up a localized string similar to Close Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PopupContactCardPinToolTip">
            <summary>
              Looks up a localized string similar to Pin Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PopupContactCardUnPinToolTip">
            <summary>
              Looks up a localized string similar to Unpin Contact Card.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PresenceAvailabilityIndicatorAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to Presence indicator.  {0} is {1}. Click to see contact details..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyAutoDetail">
            <summary>
              Looks up a localized string similar to Reset this privacy relationship to the Lync default..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyAutoHeader">
            <summary>
              Looks up a localized string similar to _Auto-Assign Relationship.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyAutoToolTip">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyBlockedDetail">
            <summary>
              Looks up a localized string similar to Share only my name and email address; blocked contacts can&apos;t reach me via Communicator.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyBlockedHeader">
            <summary>
              Looks up a localized string similar to _Blocked Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyBlockedToolTip">
            <summary>
              Looks up a localized string similar to Blocked contacts see your name and limited contact information but cannot contact you through Lync; you appear as offline..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyColleaguesDetail">
            <summary>
              Looks up a localized string similar to Share all my contact information except Home, Other, and Mobile phone, and meeting details.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyColleaguesHeader">
            <summary>
              Looks up a localized string similar to _Colleagues.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyColleaguesToolTip">
            <summary>
              Looks up a localized string similar to Colleagues see your work contact information, plus basic schedule and availability..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyExternalContactsDetail">
            <summary>
              Looks up a localized string similar to Share only my name, title, email address, company, office, and picture.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyExternalContactsHeader">
            <summary>
              Looks up a localized string similar to _External Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyExternalContactsToolTip">
            <summary>
              Looks up a localized string similar to External contacts see your name, title, company, e-mail address, and limited availability..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyFriendsFamilyDetail">
            <summary>
              Looks up a localized string similar to Share all my contact information except meeting details.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyFriendsFamilyHeader">
            <summary>
              Looks up a localized string similar to _Friends and Family.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyFriendsFamilyToolTip">
            <summary>
              Looks up a localized string similar to Friends and family see all your published contact information, including home and mobile numbers..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyRelationshipBlockedContacts">
            <summary>
              Looks up a localized string similar to Blocked Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyRelationshipColleagues">
            <summary>
              Looks up a localized string similar to Colleagues.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyRelationshipExternalContacts">
            <summary>
              Looks up a localized string similar to External Contacts.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyRelationshipFriendsAndFamily">
            <summary>
              Looks up a localized string similar to Friends and Family.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyRelationshipWorkgroup">
            <summary>
              Looks up a localized string similar to Workgroup.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyWorkgroupDetail">
            <summary>
              Looks up a localized string similar to Share all my contact information except Home and Other phone; contact can interrupt Do Not Disturb status.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyWorkgroupHeader">
            <summary>
              Looks up a localized string similar to _Workgroup.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PrivacyWorkgroupToolTip">
            <summary>
              Looks up a localized string similar to Workgroup contacts see your published work and mobile numbers, plus schedule and availability details, and can interrupt you when your status is Do Not Disturb..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PRODUCT_NAME">
            <summary>
              Looks up a localized string similar to Microsoft Lync Controls.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.PropertyChanged_InvalidWrite">
            <summary>
              Looks up a localized string similar to Cannot set read-only property:{0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorAllNoise">
            <summary>
              Looks up a localized string similar to Your query did not contain any words that can be searched. No results are available. Please enter a new query..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorBadQuery">
            <summary>
              Looks up a localized string similar to SharePoint people search failed due to a malformed query..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorBadRequest">
            <summary>
              Looks up a localized string similar to SharePoint people search failed due to a malformed query..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorBadScope">
            <summary>
              Looks up a localized string similar to SharePoint people search failed due to a malformed query..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorExternalUrlNotConfigured">
            <summary>
              Looks up a localized string similar to Skill search is not working.  Your system administrator has not configured skill search to work outside your corporate network..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorGeneric">
            <summary>
              Looks up a localized string similar to SharePoint people search failed. Please try again later.  If the problem continues, contact the system administrator..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorInternalUrlNotConfigured">
            <summary>
              Looks up a localized string similar to Skill search is not working.  Your system administrator has not configured skill search for use inside your corporate network..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorNoAuthorization">
            <summary>
              Looks up a localized string similar to You do not have permissions to connect to the search server. Please contact your system administrator..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorNone">
            <summary>
              Looks up a localized string similar to No results found..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorNoResponse">
             <summary>
               Looks up a localized string similar to Unable to connect to the server.  Please try again later.  
            If the problem continues, contact your system administrator..
             </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchErrorSharepointNotConfigured">
            <summary>
              Looks up a localized string similar to Your system administrator might not have configured Skill Search to work using your current network, or there may be a problem in accessing the SharePoint server..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to Search for a contact, or type a phone number.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputCloseButtonTooltip">
            <summary>
              Looks up a localized string similar to Close search results.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputFilterName">
            <summary>
              Looks up a localized string similar to _Name.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputFilterSkill">
            <summary>
              Looks up a localized string similar to _Skill.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputNameButtonTooltip">
            <summary>
              Looks up a localized string similar to Search for contacts by using name, e-mail address, or phone number..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputNameTooltip">
            <summary>
              Looks up a localized string similar to Search by name or email address. To dial a phone number, type the number and press ENTER..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputNameWatermarkWithSkillSearch">
            <summary>
              Looks up a localized string similar to Search for a name, phone number, or skill.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputNameWatermarkWithSkillSearchDisabled">
            <summary>
              Looks up a localized string similar to Search for a name or phone number.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchInputSkillButtonTooltip">
            <summary>
              Looks up a localized string similar to Search SharePoint contact profiles by using name, email address, skill, or area of expertise..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchNResults">
            <summary>
              Looks up a localized string similar to {0} results.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchOneResult">
            <summary>
              Looks up a localized string similar to 1 result.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchResultsAutomationPeerHelpText">
            <summary>
              Looks up a localized string similar to List search query results..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchResultsError">
            <summary>
              Looks up a localized string similar to Error Completing Search.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchResultsInProgress">
            <summary>
              Looks up a localized string similar to Searching....
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchTopNResults">
            <summary>
              Looks up a localized string similar to Top {0} results.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SearchTopOneResult">
            <summary>
              Looks up a localized string similar to Top 1 result.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SecondMonitorPrefix">
            <summary>
              Looks up a localized string similar to Second.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SeventMonitorPrefix">
            <summary>
              Looks up a localized string similar to Seventh.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SixthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Sixth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.StartAudioCallButtonRightToolTip">
            <summary>
              Looks up a localized string similar to View more options for calling.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.StartAudioCallConfirmConferenceMessage1">
            <summary>
              Looks up a localized string similar to You are about to start a conference call with all members of the group:.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.StartAudioCallConfirmConferenceMessage2Silverlight">
            <summary>
              Looks up a localized string similar to Press OK to continue, or Cancel to abandon this request..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.StartAudioCallConfirmConferenceMessage2WPF">
            <summary>
              Looks up a localized string similar to Do you wish to continue?.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.StartAudioCallConfirmConferenceTitle">
            <summary>
              Looks up a localized string similar to Lync.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SUPPORTED_BROWSERS">
            <summary>
              Looks up a localized string similar to Microsoft Internet Explorer (version 7.0 or greater).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SUPPORTED_OPERATING_SYSTEMS">
            <summary>
              Looks up a localized string similar to Microsoft Windows (version XP or greater).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SyncStateFailed">
            <summary>
              Looks up a localized string similar to Unknown failure synchronizing the address book.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SyncStateInProgress">
            <summary>
              Looks up a localized string similar to Address book synchronizing. Results may not be current..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.SyncStateNotStarted">
            <summary>
              Looks up a localized string similar to The address book is preparing to synchronize. Search results might not be current..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.TenthMonitorPrefix">
            <summary>
              Looks up a localized string similar to Tenth.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ThirdMonitorPrefix">
            <summary>
              Looks up a localized string similar to Third.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipAddContactToGroup">
            <summary>
              Looks up a localized string similar to Add Contact to Group.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipAddDistributionGroupToContactList">
            <summary>
              Looks up a localized string similar to Add Distribution Group to Contact List.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.TooltipCallButtonViewMoreCallOptions">
            <summary>
              Looks up a localized string similar to View more calling options..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipContactCardDetailsCallFormat">
            <summary>
              Looks up a localized string similar to Call {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipContactListLayoutMenuLeft">
            <summary>
              Looks up a localized string similar to Display options.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipContactListLayoutMenuRight">
            <summary>
              Looks up a localized string similar to View more layout options.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipOverflowMenu">
            <summary>
              Looks up a localized string similar to View more options for interacting with this person.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipScheduleMeeting">
            <summary>
              Looks up a localized string similar to Schedule a Meeting.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSendEmailFormat">
            <summary>
              Looks up a localized string similar to Send e-mail to: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSendEmailNotAvailable">
            <summary>
              Looks up a localized string similar to E-mail is not available for this contact.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSendFile">
            <summary>
              Looks up a localized string similar to Send a file.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSendInsantMessageNotAvailable">
            <summary>
              Looks up a localized string similar to No recipient configured for an instant messaging session.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSendInstantMessageFormat">
            <summary>
              Looks up a localized string similar to Send an instant message to {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipSetAvailability">
            <summary>
              Looks up a localized string similar to Click to change your status.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipShareDesktop">
            <summary>
              Looks up a localized string similar to Share your screen.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioContactFormat">
            <summary>
              Looks up a localized string similar to Call {0} (Lync Call).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioGroup">
            <summary>
              Looks up a localized string similar to Starting Conference (Lync call).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioHomeFormat">
            <summary>
              Looks up a localized string similar to Call {0} at home ({1}).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioMobileFormat">
            <summary>
              Looks up a localized string similar to Call {0} at mobile ({1}).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioOtherFormat">
            <summary>
              Looks up a localized string similar to Call {0} at other({1}).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioVoicemailFormat">
            <summary>
              Looks up a localized string similar to Call {0} (Voice Mail).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartAudioWorkFormat">
            <summary>
              Looks up a localized string similar to Call {0} at work ({1}).
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ToolTipStartVideo">
            <summary>
              Looks up a localized string similar to Start a Video Call.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.TryKeywordSearch">
            <summary>
              Looks up a localized string similar to Try Skill Search to search SharePoint contact profiles by using name, email address, or area of expertise..
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Properties.Resources.ViewResultsInSharePoint">
            <summary>
              Looks up a localized string similar to View results in SharePoint….
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager">
            <summary>
            Definition of a Contacts and groups manager that can be sorted
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Boolean)">
            <summary>
            Sort all <c>IContactModel</c> items in my collection of groups 
            </summary>
            <param name="comparison"></param>
            <param name="presenceAware"></param>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Groups">
            <summary>
            The collection of groups in this Contacts and Groups manager
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupUpCommand">
            <summary>
            Move Group Up command
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupDownCommand">
            <summary>
            Move Group Down command
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1">
            <summary>
            Base class for GroupBy Contacts and Groups managers
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1._presenceAware">
            <summary>
            Determine whether I should be subscribed to contacts presence and ask
            groups for re-ordering when changes in presence are detected.
            </summary>
        </member>
        <member name="F:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1._moveGroupUpCommand">
            <summary>
            Commands for this manager
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{`0},System.Boolean)">
            <summary>
            Default constructor, it triggers the creation of the list of groups in this Contacts
            and Groups manager. This contructor relies in the derived classes implementation
            of <c>CreateGroups</c> method
            </summary>
            <param name="comparison"></param>
            <param name="groups"></param>
            <param name="groupsOrder"></param>
            <param name="presenceAware"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{`0})">
            <summary>
            Create the list of groups in this Contacts and Groups manager
            </summary>
            <param name="sourceGroups"></param>
            <param name="groupsOrder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Called when <c>IContactModel</c> is added to my native source of contacts
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Called when <c>IContatModel</c> is removed from my native source of contacts
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnStatusAvailabilityChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.Model.StatusAvailability)">
            <summary>
            This method gets called when StatusAvailability of any contact
            on my groups has changed
            </summary>
            <param name="contact"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceGroupsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})">
            <summary>
            Called when <c>IGroupModel</c> is added to my native source of contacts
            </summary>
            <param name="groups"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceGroupsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})">
            <summary>
            Called when <c>IGroupModel</c> is removed from my native source of contacts
            </summary>
            <param name="groups"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Boolean)">
            <summary>
            Implementation of <c>ISortableContactsAndGroupManager.Sort</c>.
            Sort all my groups.
            </summary>
            <param name="comparison"></param>
            <param name="presenceAware"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Sort(`0)">
            <summary>
            Sort one group
            </summary>
            <param name="groupId"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveContactToGroup(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Removes any existence of this contact in the current list of
            groups and adds it to the new group passed
            </summary>
            <param name="groupId">The target group</param>
            <param name="contact">The contact to be moved</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddContactToGroup(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Add a contact to a group, using the ID of the group
            </summary>
            <param name="groupId">The target group</param>
            <param name="contact">The contact to be added</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddContactToGroup(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Add a contact to a group, using the GroupByGroup view model
            </summary>
            <param name="groupByGroup">The target group</param>
            <param name="contact">The contact to be added</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Contains(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Check whether this contact exists in any of my list of groups
            </summary>
            <param name="contact">Contact to be checked</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.GetCurrentGroupId(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Get the ID of the first group where this contact exist.
            </summary>
            <param name="contact"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddGroup(`0,System.String)">
            <summary>
            Creates a new instance of <c>GroupByGroup</c> group
            and adds it to my list of groups
            </summary>
            <param name="groupId">The ID of the group to be added</param>
            <param name="groupName">The group to be added</param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroup(`0,System.String)">
            <summary>
            Create a <c>GroupByGroup</c> group. Derived classes should override this method
            and return null in order to skip adding this group to the list of groups
            </summary>
            <param name="groupId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveGroup(`0)">
            <summary>
            Remove a group from my list of groups
            </summary>
            <param name="groupId"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveContact(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Remove a contact from a group
            </summary>
            <param name="groupId">The ID of the group </param>
            <param name="contact"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveContactFromAllGroups(Microsoft.Lync.Controls.Internal.Model.IContactModel)">
            <summary>
            Remove this contact from all the groups
            </summary>
            <param name="contact"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.GetGroupByGroup(`0)">
            <summary>
            Get a group from my list of groups
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CanExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>CanExecute</c> from <c>DeleteGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CanExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>CanExecute</c> from <c>CreateGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.ExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>Execute</c> from <c>DeleteGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.ExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>Execute</c> from <c>CreateGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.HandleContactsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle contacts changes on groups contacts list
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.HandleGroupsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handle groups changes on groups contacts list
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Dispose(System.Boolean)">
            <summary>
            Conditional Dispose for this object called
            by <c>IDisposabe.Dispose</c> method 
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Dispose">
            <summary>
            If we are Presence Aware unsubscribe to presence status changes.
            Also dispose all my groups.
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Groups">
            <summary>
            Groups Property
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Comparison">
            <summary>
            The sorting algorithm for groups in this manager
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveGroupUpCommand">
            <summary>
            Move Group Up command
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveGroupDownCommand">
            <summary>
            Move Group Down command
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.DeleteGroupCommand">
            <summary>
            Delete this group command
            </summary>
        </member>
        <member name="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroupCommand">
            <summary>
            Create a new group command
            </summary>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager">
            <summary>
            <c>GroupByGroupsContactsAndGroupsManager</c> class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Boolean)">
            <summary>
            Default constructor for <c>GroupByGroupsContactsAndGroupsManager</c>
            </summary>
            <param name="comparison"></param>
            <param name="groups"></param>
            <param name="groupsOrder"></param>
            <param name="presenceAware"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.IGroupModel})">
            <summary>
            Override for base class, does nothing groups are created
            in my constructor
            </summary>
            <param name="sourceGroups"></param>
            <param name="groupsOrder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.CreateGroup(Microsoft.Lync.Controls.Internal.Model.IGroupModel,System.String)">
            <summary>
            Overrides vase class to provide custom implementation for
            <c>GroupByGroupFrequentContacts</c> group
            </summary>
            <param name="groupId"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Add contact to group
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Remove contact from group
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.OnSourceGroupsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})">
            <summary>
            Called when <c>IGroupModel</c> is removed from my native source of contacts
            </summary>
            <param name="groups"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.OnSourceGroupsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})">
            <summary>
            Called when <c>IGroupModel</c> is added to my native source of contacts.
            Here we create a new <c>GroupByGroup</c> group that maps the new
            added <c>IGroupModel</c> groups
            </summary>
            <param name="groups"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.GetGroupByGroup(Microsoft.Lync.Controls.Internal.Model.IGroupModel)">
            <summary>
            Override base class in order to manage FrequentContactsGroup
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.Dispose(System.Boolean)">
            <summary>
            Conditional Dispose for this object called
            by <c>IDisposabe.Dispose</c> method 
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.CanExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>CanExecute</c> from <c>DeleteGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.CanExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>CanExecute</c> from <c>CreateGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.ExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>Execute</c> from <c>DeleteGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroupsContactsAndGroupsManager.ExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)">
            <summary>
            Handle <c>Execute</c> from <c>CreateGroupCommand</c>
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager">
            <summary>
            Group By Relationship class
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.ContactAccessLevel},System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="comparison"></param>
            <param name="groups"></param>
            <param name="groupsOrder"></param>
            <param name="presenceAware"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.ContactAccessLevel})">
            <summary>
            Create the list of Relationship groups
            </summary>
            <param name="sourceGroups"></param>
            <param name="groupsOrder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Add the new contact using my internal <c>AddContact</c> implementation
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Remove contacts from my groups and unsubscribe to AccessLevelPropertyChanged 
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.HandleAccessLevelPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Move contact to proper group when <c>AccessLevel</c> changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByRelationshipContactsAndGroupsManager.Dispose(System.Boolean)">
            <summary>
            Conditional Dispose for this object called
            by <c>IDisposabe.Dispose</c> method 
            Unsubscribe from <c>PropertyChanged</c> in <c>IContactModel</c> contact in my groups
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager">
            <summary>
            Group by Status contacts and group manager used by <c>ContactsList</c> control
            </summary>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.StatusAvailability})">
            <summary>
            Default constructor
            </summary>
            <param name="comparison"></param>
            <param name="groups"></param>
            <param name="groupsOrder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.StatusAvailability})">
            <summary>
            Create the list of <c>StatusAvailability</c> groups.
            We iterate over this Enum and create a group per each one.
            </summary>
            <param name="sourceGroups"></param>
            <param name="groupsOrder"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnStatusAvailabilityChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.Model.StatusAvailability)">
            <summary>
            Override base class to get the <c>StatusAvailability</c> event.
            Here we move contacts between groups based on presence change.
            Base class implementation is not called since groups are already
            ordered by status on this view.
            </summary>
            <param name="contact"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Add contacts with my internal AddContacts implementation
            </summary>
            <param name="contacts"></param>
        </member>
        <member name="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})">
            <summary>
            Remove contacts
            </summary>
            <param name="contacts"></param>
        </member>
    </members>
</doc>
